[{"/Users/choedaehan/Desktop/trip/src/index.js":"1","/Users/choedaehan/Desktop/trip/src/serviceWorker.js":"2","/Users/choedaehan/Desktop/trip/src/App.js":"3","/Users/choedaehan/Desktop/trip/src/pages/Consult.js":"4","/Users/choedaehan/Desktop/trip/src/pages/Result.js":"5","/Users/choedaehan/Desktop/trip/src/pages/test.js":"6","/Users/choedaehan/Desktop/trip/src/component/te2.js":"7","/Users/choedaehan/Desktop/trip/src/component/Question2.js":"8","/Users/choedaehan/Desktop/trip/src/component/kakaosharebutton.js":"9","/Users/choedaehan/Desktop/trip/src/layouts/Header.js":"10","/Users/choedaehan/Desktop/trip/src/pages/insta.js":"11","/Users/choedaehan/Desktop/trip/src/component/Question3.js":"12"},{"size":481,"mtime":1598270482000,"results":"13","hashOfConfig":"14"},{"size":5086,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":538,"mtime":1610467643566,"results":"16","hashOfConfig":"14"},{"size":2499,"mtime":1609954944155,"results":"17","hashOfConfig":"14"},{"size":3727,"mtime":1610467170884,"results":"18","hashOfConfig":"14"},{"size":3402,"mtime":1611819807284,"results":"19","hashOfConfig":"14"},{"size":1016,"mtime":1609843602940,"results":"20","hashOfConfig":"14"},{"size":1725,"mtime":1609955051493,"results":"21","hashOfConfig":"14"},{"size":2537,"mtime":1609841468235,"results":"22","hashOfConfig":"14"},{"size":1245,"mtime":1598271438000,"results":"23","hashOfConfig":"14"},{"size":4803,"mtime":1610468251980,"results":"24","hashOfConfig":"14"},{"size":1724,"mtime":1610094308788,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"xpvw5t",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"/Users/choedaehan/Desktop/trip/src/index.js",[],["57","58"],"/Users/choedaehan/Desktop/trip/src/serviceWorker.js",[],"/Users/choedaehan/Desktop/trip/src/App.js",[],"/Users/choedaehan/Desktop/trip/src/pages/Consult.js",["59","60"],"import React, { useState } from 'react';\r\nimport data from '../data/data.json';\r\n// import answer from '../data/answer.json';\r\nimport styled from 'styled-components';\r\nimport Question from '../component/Question2';\r\nimport Header from '../layouts/Header';\r\n\r\nimport logo from '../assets/images/tripsoda_icon.png'\r\n\r\nexport default function Consult({ history }) { // 함수형 컴포넌트의 프로퍼티로 pros를 객체를 넘겨준다. 그중 하나의 프로퍼티 이름이 history이다.\r\n    const [result, setResult] = useState([])                         // result에게 데이터를 넘겨주려고 사용.\r\n    const [count, setCount] = useState(1);     // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\r\n    const list = data.list;\r\n    const da = \"\";\r\n    \r\n    const questionList = list.map((data, index) => {\r\n        return (\r\n            <Question \r\n                key={index} // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\r\n                onClick={handleClick} // 클릭 이벤트\r\n                title={data} // 문제 string\r\n                index={index + 1} // 문항번호\r\n                count={count} // 현재 문항번호(현재 위치)\r\n            />            \r\n        );\r\n    });\r\n\r\n    function handleClick(i, r) {\r\n        result[i - 1] = r;\r\n        setResult(result.concat());\r\n        setCount(count + 1);\r\n\r\n        if (list.length === i) {\r\n\r\n            history.push({\r\n                pathname: '/a',\r\n                state: { list: result }\r\n            });\r\n\r\n            // axios.get('/cc').then(res =>{\r\n            //     console.log(res.data)\r\n            // });\r\n\r\n            // $.ajax({\r\n            //     url : '/cc',\r\n            //     type : 'GET'\r\n\r\n            // });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConsultStyled>\r\n            <Header count={count} total={list.length} />\r\n            <div className=\"question-container\">\r\n                {questionList}\r\n            </div>\r\n            <div className=\"logo\">\r\n                <img src={logo}/>\r\n            </div>\r\n        </ConsultStyled>\r\n    )\r\n};\r\n\r\nconst ConsultStyled = styled.div`\r\n    max-width: 752px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 0 10px;\r\n    \r\n    .question-container {\r\n        margin-top: 100px;\r\n    }\r\n\r\n    .logo {\r\n        display: flex;\r\n        justify-content: center;\r\n        padding-top: 30px;\r\n    }\r\n`;","/Users/choedaehan/Desktop/trip/src/pages/Result.js",["61","62","63","64","65","66","67","68"],"// import React from 'react';\r\nimport React, { useEffect,useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Willy from '../assets/images/willy.png';\r\nimport Wigo from '../assets/images/wigo.png';\r\nimport MyComponent from '../component/te2';\r\nimport KakaoApi from '../component/kakaosharebutton';\r\n// import answer from '../data/answer.json';\r\nimport answer from '../data/answer2.json';\r\n\r\nexport default function Result({ location }) {\r\n    // layout 방식 : 태그를 직접하는 방식.\r\n\r\n\r\n    useEffect(() => { // useEffact는 render가 완료된 이후 react에서 자체적인 실행을 함. -> javascript 구문, react 구문 아님.\r\n        const script = document.createElement('script')\r\n        script.src = 'http://developers.kakao.com/sdk/js/kakao.js'\r\n        script.async = true // 동기화\r\n        document.body.appendChild(script)\r\n        return () => {\r\n        document.body.removeChild(script)\r\n        }\r\n    }, [])\r\n\r\n    const list = answer.answer;\r\n    let tatste = 0; // 취향\r\n    let interest = 0; // 관심사\r\n    let re = 0;\r\n    let cnt = 0;\r\n    // const [willy, setWilly] = useState('');             // id 상태 초기화\r\n    let willy = false; // 모험추구\r\n    let wigo = false; // 감각추구\r\n    let buddy = false; // 안정추구\r\n    let tommy = false; // 경험추구\r\n\r\n    let img1 = false;\r\n    let img2 = false;\r\n    \r\n    for( let num of location.state.list){\r\n        \r\n        if(cnt % 2 !== 0)\r\n            tatste = tatste + num;\r\n        else if(cnt % 2 === 0)\r\n            interest = interest + num;\r\n        \r\n        if(cnt == 14){\r\n            if(num === 1){\r\n                img1 = true;\r\n            }\r\n            else if(num === \"2\"){\r\n                img2 = true;\r\n            }\r\n        }\r\n        \r\n        cnt++;\r\n    }\r\n\r\n    \r\n    // 내외향성 // 개폐쇄성\r\n    if(tatste < 0 && interest < 0)\r\n    {\r\n        console.log('안정추구');\r\n        re = '안정추구';\r\n        buddy = true;\r\n    }\r\n    else if(tatste < 0 && interest > 0)\r\n    {\r\n        console.log('경험추구');\r\n        re = '경험추구';\r\n        tommy = true;\r\n    }\r\n    else if(tatste > 0 && interest < 0)\r\n    {\r\n        console.log('감각추구');\r\n        re = '감각추구';\r\n        wigo = true;\r\n    }\r\n    else if(tatste > 0 && interest > 0)\r\n    {\r\n        console.log('모험추구');\r\n        re = '모험추구';\r\n        willy = true;\r\n        // setWilly(1);\r\n        // console.log(willy);\r\n    }\r\n    \r\n    return (\r\n    \r\n        <Instagramback>\r\n            <ConsultStyled>\r\n           {re}\r\n           \r\n           {willy && <img src={Willy}/>}\r\n           {wigo && <img src={Wigo}/>}\r\n           {img1 && <div>액티비티</div>}\r\n           {img2 && <div>쇼핑</div>}\r\n           {/* {willy && <div style={{color : 'red'}}>아이디를 입력해주세요.</div>} */}\r\n           {/* {willy && <img src={Willy}/>} */}\r\n           {/* {willy && <img src={Willy}/>} */}\r\n\r\n           <KakaoApi/>\r\n        </ConsultStyled>\r\n        </Instagramback>\r\n       \r\n    )\r\n\r\n};\r\nconst Instagramback = styled.div`\r\nbackground-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\r\n    height: 100vh;\r\n`;\r\nconst ConsultStyled = styled.div`\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 0 10px;\r\n    // background-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\r\n    background-image:linear-gradient(60deg, rgb(238, 140, 89), rgb(188, 61, 166));\r\n    height: 100vh;\r\n\r\n    .logo {\r\n        display: flex;\r\n        justify-content: center;\r\n        padding-top: 30px;\r\n    }\r\n\r\n    .kakaoicon {\r\n        border : 0;\r\n    }\r\n`;","/Users/choedaehan/Desktop/trip/src/pages/test.js",["69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84"],"/Users/choedaehan/Desktop/trip/src/component/te2.js",[],"/Users/choedaehan/Desktop/trip/src/component/Question2.js",["85","86","87"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport answer from '../data/answer2.json';\r\n\r\nexport default function Question({ title, count, index, onClick }) {\r\n\r\n    const list = answer.answer;\r\n    let answer1 = \"\";\r\n    let answer2 = \"\";\r\n    \r\n    const questionList = list.map((data, index) => {\r\n        \r\n        answer1 = data[count][0]\r\n        answer2 = data[count][1]\r\n        \r\n    });\r\n\r\n    return (\r\n        <QuestionStyled className={count === index ? 'active' : ''}> {/* 카운트와 인덱스가 같을 때 엑티브 클래스 추가. -> 액티브 클래스는 화면에 css를 보여주는 효과를 가진 클래스명*/}\r\n            <h2 className=\"question-title\">{title}</h2>\r\n            <ul>\r\n                <li onClick={() => onClick(index, 1)}>{answer1}</li>\r\n                <li onClick={() => onClick(index, -1)}>{answer2}</li>\r\n            </ul>\r\n        </QuestionStyled>\r\n    )\r\n}\r\n\r\nvar QuestionStyled = styled.div`\r\n    display: none;\r\n    opacity: 0;\r\n    transition: opacity 500ms;\r\n\r\n    .question-title {\r\n        color: #222;\r\n        font-weight: bold;\r\n        font-size: 30px;\r\n        margin-bottom: 100px;\r\n        height: 40px;\r\n    }\r\n\r\n    &.active {\r\n        display: block;\r\n        opacity: 1;\r\n    }\r\n\r\n    li {\r\n        width: 100%;\r\n        height: 107px;\r\n        background: #2f3438;\r\n        border-radius: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 20px;\r\n        color: #fff;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n    }\r\n\r\n    li:first-child {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    li:active {\r\n        background: #35c5f0;\r\n    }\r\n`;","/Users/choedaehan/Desktop/trip/src/component/kakaosharebutton.js",[],"/Users/choedaehan/Desktop/trip/src/layouts/Header.js",[],["88","89"],"/Users/choedaehan/Desktop/trip/src/pages/insta.js",["90","91","92","93","94"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Heart_fill from '../assets/images/heart2.png';\nimport Heart from '../assets/images/heart1.png';\nimport Willy from '../assets/images/willy.png';\nimport data from '../data/data.json';\nimport Question from '../component/Question3';\nimport axios from 'axios';\n\n\nexport default function Result({ history }) {\n    \n    const [result, setResult] = useState([])                         // result에게 데이터를 넘겨주려고 사용.\n    const [count, setCount] = useState(1);     // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\n    const list = data.list;\n    let [like_check, setLike] = useState(false);\n\n    const questionList = list.map((data, index) => {\n        return (\n            <Question \n                key={index} // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\n                onClick={handleClick} // 클릭 이벤트\n                title={data} // 문제 string\n                index={index + 1} // 문항번호\n                count={count} // 현재 문항번호(현재 위치)\n            />            \n        );\n    });\n\n    function handleClick(i, r) {\n        result[i - 1] = r;\n        setResult(result.concat());\n        setCount(count + 1);\n\n        if (list.length === i) {\n\n            history.push({\n                pathname: '/a',\n                state: { list: result }\n            });\n        }\n    }\n    \n    function handleClick() {\n        if(like_check === true){\n            console.log(\"ssss\");\n            setLike(false);\n        }\n        else{\n            console.log(\"aaaaa\");\n            setLike(true);\n        }\n            \n    }\n\n    function search_data(){\n        // const response = await axios.get(\n        axios.get('http://13.209.8.68:3000/getData').then(res =>{\n                console.log(res.data)\n        });\n    }\n\n    return (\n    \n        <Instagramback>\n            <Header>\n                <span className=\"circle\">\n                    <img className=\"profile\" src={Willy}/>\n                </span>\n            </Header>\n            <Body>\n                <button onClick={search_data}></button>\n                <a href=\"http://13.209.8.68:3000/getData\">sss</a>\n            </Body>\n            <Bottom>\n                <div className=\"heart\">\n                    {like_check && <img src={Heart_fill} onClick={handleClick}/>}\n                    {!like_check && <img src={Heart} onClick={handleClick}/>}\n                    {/* {!like_check && <img src={Heart}/>} */}\n                    {/* <img className=\"heart\" src={Heart_fill} onClick={handleClick}/> */}\n                    {/* <img className=\"heart2\" src={Heart}/> */}\n                </div>\n            </Bottom>\n        </Instagramback>\n       \n    )\n\n};\n\nconst Instagramback = styled.div`\n    background-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\n    height: 100vh;\n\n    .li {\n        font-family: Billabong;\n    }\n`;\n\nconst Header = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,230%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .circle {\n        width : 42px;\n        height : 42px;\n        border : 1px solid #111; // solid는 선의 모양을 표현\n        border-radius : 100%; // 윤곽선 표현 100%애 가까울 수록 둥글어진다. px로도 사용가능\n        display : block;\n        position : absolute;\n        top : 15px;\n        left : 20px;\n    }\n\n    .profile {\n        width : 100$;\n        height : 100%;\n        position : absolute;\n        top : 0%;\n        left : 15%;\n        // transform : translate(50%,50%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n    }\n`;\n\nconst Body = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 300px;\n    top : 20%;\n    left : 50%;\n    transform : translate(-0%,55%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n`;\n\n\nconst Bottom = styled.div`\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,229%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .heart {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n    }\n\n\n    .heart2 {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n        top : 20%;\n        left : 50%;\n        transform : translate(0%,0%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n        \n    }\n`;","/Users/choedaehan/Desktop/trip/src/component/Question3.js",["95","96","97"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport answer from '../data/answer2.json';\r\n\r\nexport default function Question({ title, count, index, onClick }) {\r\n\r\n    const list = answer.answer;\r\n    let answer1 = \"\";\r\n    let answer2 = \"\";\r\n    \r\n    const questionList = list.map((data, index) => {\r\n        \r\n        answer1 = data[count][0]\r\n        answer2 = data[count][1]\r\n        \r\n    });\r\n\r\n    return (\r\n        <QuestionStyled className={count === index ? 'active' : ''}> {/* 카운트와 인덱스가 같을 때 엑티브 클래스 추가. -> 액티브 클래스는 화면에 css를 보여주는 효과를 가진 클래스명*/}\r\n            <h2 className=\"question-title\">{title}</h2>\r\n            <ul>\r\n                <li onClick={() => onClick(index, 1)}>{answer1}</li>\r\n                <li onClick={() => onClick(index, -1)}>{answer2}</li>\r\n            </ul>\r\n        </QuestionStyled>\r\n    )\r\n}\r\n\r\nvar QuestionStyled = styled.div`\r\n    display: none;\r\n    opacity: 0;\r\n    transition: opacity 500ms;\r\n\r\n    .question-title {\r\n        color: #222;\r\n        font-weight: bold;\r\n        font-size: 30px;\r\n        margin-bottom: 100px;\r\n        height: 40px;\r\n    }\r\n\r\n    &.active {\r\n        display: block;\r\n        opacity: 1;\r\n    }\r\n\r\n    li {\r\n        width: 100%;\r\n        height: 50px;\r\n        background: #2f3438;\r\n        border-radius: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 20px;\r\n        color: #fff;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n    }\r\n\r\n    li:first-child {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    li:active {\r\n        background: #35c5f0;\r\n    }\r\n`;",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":14,"column":11,"nodeType":"104","messageId":"105","endLine":14,"endColumn":13},{"ruleId":"106","severity":1,"message":"107","line":59,"column":17,"nodeType":"108","endLine":59,"endColumn":34},{"ruleId":"102","severity":1,"message":"109","line":2,"column":27,"nodeType":"104","messageId":"105","endLine":2,"endColumn":35},{"ruleId":"102","severity":1,"message":"110","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":19},{"ruleId":"102","severity":1,"message":"111","line":25,"column":11,"nodeType":"104","messageId":"105","endLine":25,"endColumn":15},{"ruleId":"112","severity":1,"message":"113","line":46,"column":16,"nodeType":"114","messageId":"115","endLine":46,"endColumn":18},{"ruleId":"102","severity":1,"message":"116","line":64,"column":9,"nodeType":"104","messageId":"105","endLine":64,"endColumn":14},{"ruleId":"102","severity":1,"message":"117","line":70,"column":9,"nodeType":"104","messageId":"105","endLine":70,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":93,"column":22,"nodeType":"108","endLine":93,"endColumn":40},{"ruleId":"106","severity":1,"message":"107","line":94,"column":21,"nodeType":"108","endLine":94,"endColumn":38},{"ruleId":"102","severity":1,"message":"118","line":7,"column":25,"nodeType":"104","messageId":"105","endLine":7,"endColumn":34},{"ruleId":"102","severity":1,"message":"119","line":28,"column":13,"nodeType":"104","messageId":"105","endLine":28,"endColumn":15},{"ruleId":"102","severity":1,"message":"120","line":31,"column":13,"nodeType":"104","messageId":"105","endLine":31,"endColumn":15},{"ruleId":"102","severity":1,"message":"121","line":34,"column":13,"nodeType":"104","messageId":"105","endLine":34,"endColumn":15},{"ruleId":"102","severity":1,"message":"122","line":37,"column":13,"nodeType":"104","messageId":"105","endLine":37,"endColumn":15},{"ruleId":"102","severity":1,"message":"123","line":40,"column":13,"nodeType":"104","messageId":"105","endLine":40,"endColumn":15},{"ruleId":"102","severity":1,"message":"124","line":43,"column":13,"nodeType":"104","messageId":"105","endLine":43,"endColumn":15},{"ruleId":"102","severity":1,"message":"125","line":46,"column":13,"nodeType":"104","messageId":"105","endLine":46,"endColumn":15},{"ruleId":"102","severity":1,"message":"126","line":49,"column":13,"nodeType":"104","messageId":"105","endLine":49,"endColumn":15},{"ruleId":"102","severity":1,"message":"127","line":52,"column":13,"nodeType":"104","messageId":"105","endLine":52,"endColumn":15},{"ruleId":"102","severity":1,"message":"128","line":55,"column":13,"nodeType":"104","messageId":"105","endLine":55,"endColumn":16},{"ruleId":"102","severity":1,"message":"129","line":58,"column":13,"nodeType":"104","messageId":"105","endLine":58,"endColumn":16},{"ruleId":"102","severity":1,"message":"130","line":61,"column":13,"nodeType":"104","messageId":"105","endLine":61,"endColumn":16},{"ruleId":"102","severity":1,"message":"131","line":64,"column":13,"nodeType":"104","messageId":"105","endLine":64,"endColumn":16},{"ruleId":"102","severity":1,"message":"132","line":67,"column":13,"nodeType":"104","messageId":"105","endLine":67,"endColumn":16},{"ruleId":"102","severity":1,"message":"133","line":110,"column":9,"nodeType":"104","messageId":"105","endLine":110,"endColumn":12},{"ruleId":"102","severity":1,"message":"109","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"134","line":11,"column":11,"nodeType":"104","messageId":"105","endLine":11,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":11,"column":49,"nodeType":"137","messageId":"138","endLine":11,"endColumn":51},{"ruleId":"98","replacedBy":"139"},{"ruleId":"100","replacedBy":"140"},{"ruleId":"102","severity":1,"message":"134","line":18,"column":11,"nodeType":"104","messageId":"105","endLine":18,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":44,"column":14,"nodeType":"104","messageId":"143","endLine":44,"endColumn":25},{"ruleId":"106","severity":1,"message":"107","line":68,"column":21,"nodeType":"108","endLine":68,"endColumn":59},{"ruleId":"106","severity":1,"message":"107","line":77,"column":36,"nodeType":"108","endLine":77,"endColumn":81},{"ruleId":"106","severity":1,"message":"107","line":78,"column":37,"nodeType":"108","endLine":78,"endColumn":77},{"ruleId":"102","severity":1,"message":"109","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"134","line":11,"column":11,"nodeType":"104","messageId":"105","endLine":11,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":11,"column":49,"nodeType":"137","messageId":"138","endLine":11,"endColumn":51},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'da' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'MyComponent' is defined but never used.","'list' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'buddy' is assigned a value but never used.","'tommy' is assigned a value but never used.","'setResult' is assigned a value but never used.","'q1' is assigned a value but never used.","'q2' is assigned a value but never used.","'q3' is assigned a value but never used.","'q4' is assigned a value but never used.","'q5' is assigned a value but never used.","'q6' is assigned a value but never used.","'q7' is assigned a value but never used.","'q8' is assigned a value but never used.","'q9' is assigned a value but never used.","'q10' is assigned a value but never used.","'q11' is assigned a value but never used.","'q12' is assigned a value but never used.","'q13' is assigned a value but never used.","'q14' is assigned a value but never used.","'q15' is assigned a value but never used.","'questionList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["144"],["145"],"no-redeclare","'handleClick' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]