[{"/Users/choedaehan/Desktop/trip/src/index.js":"1","/Users/choedaehan/Desktop/trip/src/serviceWorker.js":"2","/Users/choedaehan/Desktop/trip/src/App.js":"3","/Users/choedaehan/Desktop/trip/src/pages/Consult.js":"4","/Users/choedaehan/Desktop/trip/src/pages/Result.js":"5","/Users/choedaehan/Desktop/trip/src/pages/test.js":"6","/Users/choedaehan/Desktop/trip/src/component/te2.js":"7","/Users/choedaehan/Desktop/trip/src/component/Question2.js":"8","/Users/choedaehan/Desktop/trip/src/component/kakaosharebutton.js":"9","/Users/choedaehan/Desktop/trip/src/layouts/Header.js":"10","/Users/choedaehan/Desktop/trip/src/pages/insta.js":"11","/Users/choedaehan/Desktop/trip/src/component/Question3.js":"12","/Users/choedaehan/Desktop/trip/src/component/TweetShareBtn.js":"13","/Users/choedaehan/Desktop/trip/src/component/ssss.js":"14","/Users/choedaehan/Desktop/trip/src/pages/testpage.js":"15"},{"size":481,"mtime":1598270482000,"results":"16","hashOfConfig":"17"},{"size":5086,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":633,"mtime":1613214171656,"results":"19","hashOfConfig":"17"},{"size":2499,"mtime":1609954944155,"results":"20","hashOfConfig":"17"},{"size":3727,"mtime":1610467170884,"results":"21","hashOfConfig":"17"},{"size":3430,"mtime":1611917260421,"results":"22","hashOfConfig":"17"},{"size":1016,"mtime":1609843602940,"results":"23","hashOfConfig":"17"},{"size":1725,"mtime":1609955051493,"results":"24","hashOfConfig":"17"},{"size":2500,"mtime":1612185471207,"results":"25","hashOfConfig":"17"},{"size":1245,"mtime":1598271438000,"results":"26","hashOfConfig":"17"},{"size":6881,"mtime":1613226766518,"results":"27","hashOfConfig":"17"},{"size":1724,"mtime":1610094308788,"results":"28","hashOfConfig":"17"},{"size":1543,"mtime":1613226576315,"results":"29","hashOfConfig":"17"},{"size":606,"mtime":1613226648354,"results":"30","hashOfConfig":"17"},{"size":495,"mtime":1613214850908,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"19pd7la",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"34"},"/Users/choedaehan/Desktop/trip/src/index.js",[],["74","75"],"/Users/choedaehan/Desktop/trip/src/serviceWorker.js",[],"/Users/choedaehan/Desktop/trip/src/App.js",[],"/Users/choedaehan/Desktop/trip/src/pages/Consult.js",["76","77"],"import React, { useState } from 'react';\r\nimport data from '../data/data.json';\r\n// import answer from '../data/answer.json';\r\nimport styled from 'styled-components';\r\nimport Question from '../component/Question2';\r\nimport Header from '../layouts/Header';\r\n\r\nimport logo from '../assets/images/tripsoda_icon.png'\r\n\r\nexport default function Consult({ history }) { // 함수형 컴포넌트의 프로퍼티로 pros를 객체를 넘겨준다. 그중 하나의 프로퍼티 이름이 history이다.\r\n    const [result, setResult] = useState([])                         // result에게 데이터를 넘겨주려고 사용.\r\n    const [count, setCount] = useState(1);     // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\r\n    const list = data.list;\r\n    const da = \"\";\r\n    \r\n    const questionList = list.map((data, index) => {\r\n        return (\r\n            <Question \r\n                key={index} // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\r\n                onClick={handleClick} // 클릭 이벤트\r\n                title={data} // 문제 string\r\n                index={index + 1} // 문항번호\r\n                count={count} // 현재 문항번호(현재 위치)\r\n            />            \r\n        );\r\n    });\r\n\r\n    function handleClick(i, r) {\r\n        result[i - 1] = r;\r\n        setResult(result.concat());\r\n        setCount(count + 1);\r\n\r\n        if (list.length === i) {\r\n\r\n            history.push({\r\n                pathname: '/a',\r\n                state: { list: result }\r\n            });\r\n\r\n            // axios.get('/cc').then(res =>{\r\n            //     console.log(res.data)\r\n            // });\r\n\r\n            // $.ajax({\r\n            //     url : '/cc',\r\n            //     type : 'GET'\r\n\r\n            // });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConsultStyled>\r\n            <Header count={count} total={list.length} />\r\n            <div className=\"question-container\">\r\n                {questionList}\r\n            </div>\r\n            <div className=\"logo\">\r\n                <img src={logo}/>\r\n            </div>\r\n        </ConsultStyled>\r\n    )\r\n};\r\n\r\nconst ConsultStyled = styled.div`\r\n    max-width: 752px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 0 10px;\r\n    \r\n    .question-container {\r\n        margin-top: 100px;\r\n    }\r\n\r\n    .logo {\r\n        display: flex;\r\n        justify-content: center;\r\n        padding-top: 30px;\r\n    }\r\n`;","/Users/choedaehan/Desktop/trip/src/pages/Result.js",["78","79","80","81","82","83","84","85"],"// import React from 'react';\r\nimport React, { useEffect,useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Willy from '../assets/images/willy.png';\r\nimport Wigo from '../assets/images/wigo.png';\r\nimport MyComponent from '../component/te2';\r\nimport KakaoApi from '../component/kakaosharebutton';\r\n// import answer from '../data/answer.json';\r\nimport answer from '../data/answer2.json';\r\n\r\nexport default function Result({ location }) {\r\n    // layout 방식 : 태그를 직접하는 방식.\r\n\r\n\r\n    useEffect(() => { // useEffact는 render가 완료된 이후 react에서 자체적인 실행을 함. -> javascript 구문, react 구문 아님.\r\n        const script = document.createElement('script')\r\n        script.src = 'http://developers.kakao.com/sdk/js/kakao.js'\r\n        script.async = true // 동기화\r\n        document.body.appendChild(script)\r\n        return () => {\r\n        document.body.removeChild(script)\r\n        }\r\n    }, [])\r\n\r\n    const list = answer.answer;\r\n    let tatste = 0; // 취향\r\n    let interest = 0; // 관심사\r\n    let re = 0;\r\n    let cnt = 0;\r\n    // const [willy, setWilly] = useState('');             // id 상태 초기화\r\n    let willy = false; // 모험추구\r\n    let wigo = false; // 감각추구\r\n    let buddy = false; // 안정추구\r\n    let tommy = false; // 경험추구\r\n\r\n    let img1 = false;\r\n    let img2 = false;\r\n    \r\n    for( let num of location.state.list){\r\n        \r\n        if(cnt % 2 !== 0)\r\n            tatste = tatste + num;\r\n        else if(cnt % 2 === 0)\r\n            interest = interest + num;\r\n        \r\n        if(cnt == 14){\r\n            if(num === 1){\r\n                img1 = true;\r\n            }\r\n            else if(num === \"2\"){\r\n                img2 = true;\r\n            }\r\n        }\r\n        \r\n        cnt++;\r\n    }\r\n\r\n    \r\n    // 내외향성 // 개폐쇄성\r\n    if(tatste < 0 && interest < 0)\r\n    {\r\n        console.log('안정추구');\r\n        re = '안정추구';\r\n        buddy = true;\r\n    }\r\n    else if(tatste < 0 && interest > 0)\r\n    {\r\n        console.log('경험추구');\r\n        re = '경험추구';\r\n        tommy = true;\r\n    }\r\n    else if(tatste > 0 && interest < 0)\r\n    {\r\n        console.log('감각추구');\r\n        re = '감각추구';\r\n        wigo = true;\r\n    }\r\n    else if(tatste > 0 && interest > 0)\r\n    {\r\n        console.log('모험추구');\r\n        re = '모험추구';\r\n        willy = true;\r\n        // setWilly(1);\r\n        // console.log(willy);\r\n    }\r\n    \r\n    return (\r\n    \r\n        <Instagramback>\r\n            <ConsultStyled>\r\n           {re}\r\n           \r\n           {willy && <img src={Willy}/>}\r\n           {wigo && <img src={Wigo}/>}\r\n           {img1 && <div>액티비티</div>}\r\n           {img2 && <div>쇼핑</div>}\r\n           {/* {willy && <div style={{color : 'red'}}>아이디를 입력해주세요.</div>} */}\r\n           {/* {willy && <img src={Willy}/>} */}\r\n           {/* {willy && <img src={Willy}/>} */}\r\n\r\n           <KakaoApi/>\r\n        </ConsultStyled>\r\n        </Instagramback>\r\n       \r\n    )\r\n\r\n};\r\nconst Instagramback = styled.div`\r\nbackground-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\r\n    height: 100vh;\r\n`;\r\nconst ConsultStyled = styled.div`\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 0 10px;\r\n    // background-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\r\n    background-image:linear-gradient(60deg, rgb(238, 140, 89), rgb(188, 61, 166));\r\n    height: 100vh;\r\n\r\n    .logo {\r\n        display: flex;\r\n        justify-content: center;\r\n        padding-top: 30px;\r\n    }\r\n\r\n    .kakaoicon {\r\n        border : 0;\r\n    }\r\n`;","/Users/choedaehan/Desktop/trip/src/pages/test.js",["86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nexport default function Question({history, location}) {\n    \n    const [resultArray, setResult] = useState(location.state.list.concat());\n    let cnt = 0;\n    \n    let q1 = 0;\n    let q2 = 0;\n    let q3 = 0;\n    let q4 = 0;\n    let q5 = 0;\n    let q6 = 0;\n    let q7 = 0;\n    let q8 = 0;\n    let q9 = 0;\n    let q10 = 0;\n    let q11 = 0;\n    let q12 = 0;\n    let q13 = 0;\n    let q14 = 0;\n    let q15 = 0;\n\n    for( let num of location.state.list){\n        if(cnt === 0){\n            q1 = num;\n        }\n        if(cnt === 1){\n            q2 = num;\n        }\n        if(cnt === 2){\n            q3 = num;\n        }\n        if(cnt ===3 ){\n            q4 = num;\n        }\n        if(cnt === 4){\n            q5 = num;\n        }\n        if(cnt === 5){\n            q6 = num;\n        }\n        if(cnt === 6){\n            q7 = num;\n        }\n        if(cnt === 7){\n            q8 = num;\n        }\n        if(cnt === 8){\n            q9 = num;\n        }\n        if(cnt === 9){\n            q10 = num;\n        }\n        if(cnt === 10){\n            q11 = num;\n        }\n        if(cnt === 11){\n            q12 = num;\n        }\n        if(cnt === 12){\n            q13 = num;\n        }\n        if(cnt === 13){\n            q14 = num;\n        }\n        cnt++;\n    }\n\n    function handleClick1() {\n\n        resultArray[cnt] = \"1\";\n        q15 = 1;\n        save_result();\n    }\n\n    function handleClick2() {\n\n        resultArray[cnt] = \"2\";\n        q15 = 2;\n        save_result();\n    }\n\n    function handleClick3() {\n\n        resultArray[cnt] = \"3\";\n        q15 = 3;\n        save_result();\n    }\n\n    function handleClick4() {\n\n        resultArray[cnt] = \"4\";\n        q15 = 4;\n        save_result();\n    }\n\n    function handleClick5() {\n\n        resultArray[cnt] = \"5\";\n        q15 = 5;\n        save_result();\n    }\n\n    function handleClick6() {\n        \n        resultArray[cnt] = \"6\";\n        q15 = 6;\n        save_result();  \n    }\n\n    function save_result() {\n        let tag = \"tag\";\n        let character = \"Willy\";\n        let open =3;\n        let extrovert = 2;\n        axios.post(\"http://118.67.132.128:8000/save_result\", {params : {resultArray,tag ,character,open,extrovert}})\n      .then(res => {\n         \n            console.log(\"in!\")\n\n      })\n      .catch(res => {console.log(\"ERR\");});\n        \n    history.push({\n        pathname: '/result',\n        state: { list: resultArray }\n    });\n\n    };\n\n    return (\n        <div>\n            <div> 관심사 태그를 선택해 주세요!</div>\n            <QuestionStyled>\n                <button onClick={handleClick1}>#액티비티</button>\n                <button onClick={handleClick2}>#쇼핑</button>\n                <button onClick={handleClick3}>#맛집</button>\n                <button onClick={handleClick4}>#문호/예술</button>\n                <button onClick={handleClick5}>#파티</button>\n                <button onClick={handleClick6}>#자연</button>\n            </QuestionStyled>\n        </div>\n        \n    )\n}\n\nvar QuestionStyled = styled.div`\n\n    button {\n        width: 100px;\n        height: 107px;\n        background: #2f3438;\n        border-radius: 10px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 20px;\n        color: #fff;\n        font-weight: bold;\n        cursor: pointer;\n    }\n`;","/Users/choedaehan/Desktop/trip/src/component/te2.js",[],"/Users/choedaehan/Desktop/trip/src/component/Question2.js",["102","103","104"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport answer from '../data/answer2.json';\r\n\r\nexport default function Question({ title, count, index, onClick }) {\r\n\r\n    const list = answer.answer;\r\n    let answer1 = \"\";\r\n    let answer2 = \"\";\r\n    \r\n    const questionList = list.map((data, index) => {\r\n        \r\n        answer1 = data[count][0]\r\n        answer2 = data[count][1]\r\n        \r\n    });\r\n\r\n    return (\r\n        <QuestionStyled className={count === index ? 'active' : ''}> {/* 카운트와 인덱스가 같을 때 엑티브 클래스 추가. -> 액티브 클래스는 화면에 css를 보여주는 효과를 가진 클래스명*/}\r\n            <h2 className=\"question-title\">{title}</h2>\r\n            <ul>\r\n                <li onClick={() => onClick(index, 1)}>{answer1}</li>\r\n                <li onClick={() => onClick(index, -1)}>{answer2}</li>\r\n            </ul>\r\n        </QuestionStyled>\r\n    )\r\n}\r\n\r\nvar QuestionStyled = styled.div`\r\n    display: none;\r\n    opacity: 0;\r\n    transition: opacity 500ms;\r\n\r\n    .question-title {\r\n        color: #222;\r\n        font-weight: bold;\r\n        font-size: 30px;\r\n        margin-bottom: 100px;\r\n        height: 40px;\r\n    }\r\n\r\n    &.active {\r\n        display: block;\r\n        opacity: 1;\r\n    }\r\n\r\n    li {\r\n        width: 100%;\r\n        height: 107px;\r\n        background: #2f3438;\r\n        border-radius: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 20px;\r\n        color: #fff;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n    }\r\n\r\n    li:first-child {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    li:active {\r\n        background: #35c5f0;\r\n    }\r\n`;","/Users/choedaehan/Desktop/trip/src/component/kakaosharebutton.js",["105"],"import React from 'react'\nimport kakaoicon from '../assets/images/kakaoimage.png';\nimport styled from 'styled-components';\n\nconst Kakaostyle = styled.div`\n  button {\n    width : 50px;\n    height : 50px;\n    border : 0;\n    background : white;\n    outline: none;\n\n  }\n  img {\n    width : 100%;\n    // position : absolte;\n  }\n`;\n\nconst KakaoShareButton = () => {\n  \n  let check = 0;\n  let url_p = \"a\";\n\n  const createKakaoButton = () => {\n  \n    if(check !== 0) // == 값만 비교, === 타입과 값 비교\n    {\n        return;\n    }\n\n    check = 1;\n\n    // kakao sdk script이 정상적으로 불러와졌으면 window.Kakao로 접근이 가능합니다\n    if (window.Kakao) {\n      const kakao = window.Kakao\n      // 중복 initialization 방지\n      if (!kakao.isInitialized()) {\n        // 두번째 step 에서 가져온 javascript key 를 이용하여 initialize\n        kakao.init('528314a8da4cb592c76916878dd8af53');\n      }\n      kakao.Link.createDefaultButton({\n        // Render 부분 id=kakao-link-btn 을 찾아 그부분에 렌더링을 합니다\n        container: '#kakao-link-btn',\n        objectType: 'feed',\n        content: {\n          title: '딸기 치즈 케익',\n          description: '#리액트 #카카오 #공유버튼',\n          // imageUrl: '/Users/choedaehan/Desktop/trip/src/assets/images/kakaoimage.png', // i.e. process.env.FETCH_URL + '/logo.png'\n          imageUrl: '/Users/choedaehan/Desktop/trip/src/assets/images/kakaoimage.png',\n          link: {\n            mobileWebUrl: 'https://travelmbti.com',\n            webUrl: 'https://travelmbti.com', // window.location.href,\n          },\n        },\n        social: {\n            likeCount: 286,\n            commentCount: 50,\n            sharedCount: 845\n        },\n        buttons: [\n          {\n            title: '웹으로 보기',\n            link: {\n              mobileWebUrl: 'https://travelmbti.com',\n              webUrl: 'https://travelmbti.com',\n            },\n          },\n          {\n            title: '앱으로 보기',\n            link: {\n              mobileWebUrl: 'https://travelmbti.com',\n              webUrl: 'https://travelmbti.com',\n            },\n          },\n        ],\n      })\n    }\n  }\n  return (\n    <Kakaostyle>\n    <div className=\"kakaostyle\">\n      {/* Kakao share button */}\n      <button id=\"kakao-link-btn\" onClick={createKakaoButton}>\n        <img src={kakaoicon} alt=\"kakao-share-icon\" />\n      </button>\n    </div>\n    </Kakaostyle>\n  )\n}\nexport default KakaoShareButton","/Users/choedaehan/Desktop/trip/src/layouts/Header.js",[],["106","107"],"/Users/choedaehan/Desktop/trip/src/pages/insta.js",["108","109","110","111","112","113","114","115","116"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Heart_fill from '../assets/images/heart2.png';\nimport Heart from '../assets/images/heart1.png';\nimport Willy from '../assets/images/willy.png';\nimport data from '../data/data.json';\nimport Question from '../component/Question3';\nimport axios from 'axios';\nimport KakaoApi from '../component/kakaosharebutton';\nimport Tweet from '../component/TweetShareBtn';\nimport Helmet from 'react-helmet';\nimport T from '../component/ssss';\n\nexport default function Result({ history }) {\n    \n    const [result, setResult] = useState([])                         // result에게 데이터를 넘겨주려고 사용.\n    const [count, setCount] = useState(1);     // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\n    const list = data.list;\n    let [like_check, setLike] = useState(false);\n\n    const questionList = list.map((data, index) => {\n        return (\n            <Question \n                key={index} // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\n                onClick={handleClick} // 클릭 이벤트\n                title={data} // 문제 string\n                index={index + 1} // 문항번호\n                count={count} // 현재 문항번호(현재 위치)\n            />            \n        );\n    });\n\n    function handleClick(i, r) {\n        result[i - 1] = r;\n        setResult(result.concat());\n        setCount(count + 1);\n\n        if (list.length === i) {\n\n            history.push({\n                pathname: '/a',\n                state: { list: result }\n            });\n        }\n    }\n    \n    function handleClick() {\n        if(like_check === true){\n            console.log(\"ssss\");\n            setLike(false);\n        }\n        else{\n            console.log(\"aaaaa\");\n            setLike(true);\n        }\n            \n    }\n\n    function search_data(){\n        // const response = await axios.get(\n            let tag = \"tag\";\n            let character = \"Willy\";\n            let open =3;\n            let extrovert = 2;\n            let resultArray = new Array();\n\n            resultArray[0] = 1;\n            resultArray[1] = 1;\n            resultArray[2] = 1;\n            resultArray[3] = 1;\n            resultArray[4] = 1;\n            resultArray[5] = 1;\n            resultArray[6] = 1;\n            resultArray[7] = 1;\n            resultArray[8] = 1;\n            resultArray[9] = 1;\n            resultArray[10] = 1;\n            resultArray[11] = 1;\n            resultArray[12] = 1;\n            resultArray[13] = 1;\n\n            // let url = \"http://118.67.132.128:8000/save_result\";\n            // let url = \"locahost:4000/save_result\";\n        \n        let url = '/save_result';\n        var data = {\n            \"tag\":tag,\n            \"character\":character,\n            \"open\":open,\n            \"extrovert\":extrovert,\n            \"resultArray\":resultArray\n        };\n\n        var config = {\n            method: 'post',\n            url: 'http://118.67.132.128:4000/save_result',\n            headers: { \n                withCredentials: true,\n                xsrfCookieName: \"XSRF-TOKEN\",\n                xsrfHeaderName: \"X-XSRF-TOKEN\", },\n            params : {resultArray, tag, character, extrovert, open}\n          };\n\n        axios(config)\n        // axios.post(url, {params : {resultArray,tag,character,open,extrovert}})\n        // axios.post(url, {resultArray : 'resultArray',tag : '',character,open,extrovert})\n        .then(res =>{\n                console.log(\"sdsa\");\n        });\n    }\n\n    \n    return (\n    \n        <Instagramback>\n            <Header>\n                <span className=\"circle\">\n                    <img className=\"profile\" src={Willy}/>\n                </span>\n            </Header>\n            <Body>\n                <button onClick={search_data}></button>\n                {/* <Helmet>\n                <meta name=\"twitter:url\" content={\"https://travelmbti.com/copy_result?char=\" + \"Willy\" + \"&tag=\" + 2} />\n\t\t\t    <meta name=\"twitter:title\" content=\"title\" />\n\t\t\t    <meta name=\"twitter:description\" content=\"description\" />\n\t\t\t    <meta name=\"twitter:image\" content={Willy} />\n\t\t\t    <meta name=\"twitter:card\" content=\"summary\" />\n                </Helmet> */}\n                <T></T>\n                <Tweet></Tweet>\n            </Body>\n            <Bottom>\n                <div className=\"heart\">\n                    {like_check && <img src={Heart_fill} onClick={handleClick}/>}\n                    {!like_check && <img src={Heart} onClick={handleClick}/>}\n                    <KakaoApi/>\n                    {/* {!like_check && <img src={Heart}/>} */}\n                    {/* <img className=\"heart\" src={Heart_fill} onClick={handleClick}/> */}\n                    {/* <img className=\"heart2\" src={Heart}/> */}\n                </div>\n            </Bottom>\n        </Instagramback>\n       \n    )\n\n};\n\nconst Instagramback = styled.div`\n    background-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\n    height: 100vh;\n\n    .li {\n        font-family: Billabong;\n    }\n`;\n\nconst Header = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,230%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .circle {\n        width : 42px;\n        height : 42px;\n        border : 1px solid #111; // solid는 선의 모양을 표현\n        border-radius : 100%; // 윤곽선 표현 100%애 가까울 수록 둥글어진다. px로도 사용가능\n        display : block;\n        position : absolute;\n        top : 15px;\n        left : 20px;\n    }\n\n    .profile {\n        width : 100$;\n        height : 100%;\n        position : absolute;\n        top : 0%;\n        left : 15%;\n        // transform : translate(50%,50%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n    }\n`;\n\nconst Body = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 300px;\n    top : 20%;\n    left : 50%;\n    transform : translate(-0%,55%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n`;\n\n\nconst Bottom = styled.div`\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,229%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .heart {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n    }\n\n\n    .heart2 {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n        top : 20%;\n        left : 50%;\n        transform : translate(0%,0%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n        \n    }\n`;","/Users/choedaehan/Desktop/trip/src/component/Question3.js",["117","118","119"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport answer from '../data/answer2.json';\r\n\r\nexport default function Question({ title, count, index, onClick }) {\r\n\r\n    const list = answer.answer;\r\n    let answer1 = \"\";\r\n    let answer2 = \"\";\r\n    \r\n    const questionList = list.map((data, index) => {\r\n        \r\n        answer1 = data[count][0]\r\n        answer2 = data[count][1]\r\n        \r\n    });\r\n\r\n    return (\r\n        <QuestionStyled className={count === index ? 'active' : ''}> {/* 카운트와 인덱스가 같을 때 엑티브 클래스 추가. -> 액티브 클래스는 화면에 css를 보여주는 효과를 가진 클래스명*/}\r\n            <h2 className=\"question-title\">{title}</h2>\r\n            <ul>\r\n                <li onClick={() => onClick(index, 1)}>{answer1}</li>\r\n                <li onClick={() => onClick(index, -1)}>{answer2}</li>\r\n            </ul>\r\n        </QuestionStyled>\r\n    )\r\n}\r\n\r\nvar QuestionStyled = styled.div`\r\n    display: none;\r\n    opacity: 0;\r\n    transition: opacity 500ms;\r\n\r\n    .question-title {\r\n        color: #222;\r\n        font-weight: bold;\r\n        font-size: 30px;\r\n        margin-bottom: 100px;\r\n        height: 40px;\r\n    }\r\n\r\n    &.active {\r\n        display: block;\r\n        opacity: 1;\r\n    }\r\n\r\n    li {\r\n        width: 100%;\r\n        height: 50px;\r\n        background: #2f3438;\r\n        border-radius: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 20px;\r\n        color: #fff;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n    }\r\n\r\n    li:first-child {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    li:active {\r\n        background: #35c5f0;\r\n    }\r\n`;","/Users/choedaehan/Desktop/trip/src/component/TweetShareBtn.js",["120","121","122","123"],"import React from \"react\";\nimport icon from \"../assets/images/tweet_icon.svg\";\nimport { Helmet } from 'react-helmet';\nimport Willy from '../assets/images/willy.png';\n\nexport default function TweetShareBtn({ characater, tag, location }) {\n  \n    function open_tweet() {\n\n        // <Helmet>\n\t\t// \t{/* <meta name=\"description\" content={\"description\"} />\n\t\t// \t<meta name=\"keywords\" content={\"keywords\"} />\n\t\t// \t<title>{\"title\"}</title>\n\t\t// \t<meta property=\"og:title\" content={\"title\"} />\n\t\t// \t<meta property=\"og:image\" content={Willy} />\n\t\t// \t<meta property=\"og:site_name\" content=\"\" />\n\t\t// \t<meta property=\"og:description\" content={\"description\"} /> */}\n        //     <meta name=\"twitter:url\" content={\"https://travelmbti.com/copy_result?char=\" + \"Willy\" + \"&tag=\" + 2} />\n\t\t// \t<meta name=\"twitter:title\" content=\"title\" />\n\t\t// \t<meta name=\"twitter:description\" content=\"description\" />\n\t\t// \t<meta name=\"twitter:image\" content={Willy} />\n\t\t// \t<meta name=\"twitter:card\" content=\"summary\" />\n\t\t\n        // </Helmet>\n    const url =\n      \"https://travelmbti.com/copy_result?char=\" + \"Willy\" + \"&tag=\" + 2;\n    const tweet_url =\n      \"https://twitter.com/share?url=\" +\n      encodeURIComponent(url) +\n      \"&text=\" +\n      \"코로나 이후 내가 가야할 여행지는? \" +\n      location +\n      \" ✈️ \" +\n      \"테스트 결과 보러 가기 ➡️\";\n      \n    window.open(tweet_url, \"tweeter\", \"witdh=626,height=436\");\n  }\n\n  return (\n    <button onClick={open_tweet}>\n      <img src={icon} alt=\"alt\" />\n    </button>\n  );\n}\n","/Users/choedaehan/Desktop/trip/src/component/ssss.js",["124","125"],"import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport Willy from '../assets/images/willy.png';\n\nconst ReactHelmet = () => {\n\treturn (\n        <div>\n            <Helmet>\n\t\t\t    <meta name=\"twitter:url\" content={\"https://travelmbti.com/copy_result?char=\" + \"Willy\" + \"&tag=\" + 2} />\n\t\t\t    <meta name=\"twitter:title\" content=\"title\" />\n\t\t\t    <meta name=\"twitter:description\" content=\"description\" />\n\t\t\t    <meta name=\"twitter:image\" content={Willy} />\n\t\t\t    <meta name=\"twitter:card\" content=\"summary\" />\n\t\t    </Helmet>\n            \n        </div>\n\t\t\n\t);\n};\nexport default ReactHelmet;","/Users/choedaehan/Desktop/trip/src/pages/testpage.js",["126","127"],"import React from \"react\";\nimport Tweet2 from '../component/ssss';\nimport Tweet from '../component/TweetShareBtn';\n\nexport default function TweetShareBtn() {\n    \n    return (\n        <div className=\"App\">\n        {/* <Tweet2 \n            keywords=\"react, react-helmet\" \n            description=\"라액트 헬멧입니다.\" \n            title=\"App component\" \n            // favicon=\"/image/android-icon-144x144.jpg\"\n        /> */}\n        <Tweet></Tweet>\n        // ...\n    </div>\n    );\n  }\n  ",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":14,"column":11,"nodeType":"134","messageId":"135","endLine":14,"endColumn":13},{"ruleId":"136","severity":1,"message":"137","line":59,"column":17,"nodeType":"138","endLine":59,"endColumn":34},{"ruleId":"132","severity":1,"message":"139","line":2,"column":27,"nodeType":"134","messageId":"135","endLine":2,"endColumn":35},{"ruleId":"132","severity":1,"message":"140","line":6,"column":8,"nodeType":"134","messageId":"135","endLine":6,"endColumn":19},{"ruleId":"132","severity":1,"message":"141","line":25,"column":11,"nodeType":"134","messageId":"135","endLine":25,"endColumn":15},{"ruleId":"142","severity":1,"message":"143","line":46,"column":16,"nodeType":"144","messageId":"145","endLine":46,"endColumn":18},{"ruleId":"132","severity":1,"message":"146","line":64,"column":9,"nodeType":"134","messageId":"135","endLine":64,"endColumn":14},{"ruleId":"132","severity":1,"message":"147","line":70,"column":9,"nodeType":"134","messageId":"135","endLine":70,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":93,"column":22,"nodeType":"138","endLine":93,"endColumn":40},{"ruleId":"136","severity":1,"message":"137","line":94,"column":21,"nodeType":"138","endLine":94,"endColumn":38},{"ruleId":"132","severity":1,"message":"148","line":7,"column":25,"nodeType":"134","messageId":"135","endLine":7,"endColumn":34},{"ruleId":"132","severity":1,"message":"149","line":28,"column":13,"nodeType":"134","messageId":"135","endLine":28,"endColumn":15},{"ruleId":"132","severity":1,"message":"150","line":31,"column":13,"nodeType":"134","messageId":"135","endLine":31,"endColumn":15},{"ruleId":"132","severity":1,"message":"151","line":34,"column":13,"nodeType":"134","messageId":"135","endLine":34,"endColumn":15},{"ruleId":"132","severity":1,"message":"152","line":37,"column":13,"nodeType":"134","messageId":"135","endLine":37,"endColumn":15},{"ruleId":"132","severity":1,"message":"153","line":40,"column":13,"nodeType":"134","messageId":"135","endLine":40,"endColumn":15},{"ruleId":"132","severity":1,"message":"154","line":43,"column":13,"nodeType":"134","messageId":"135","endLine":43,"endColumn":15},{"ruleId":"132","severity":1,"message":"155","line":46,"column":13,"nodeType":"134","messageId":"135","endLine":46,"endColumn":15},{"ruleId":"132","severity":1,"message":"156","line":49,"column":13,"nodeType":"134","messageId":"135","endLine":49,"endColumn":15},{"ruleId":"132","severity":1,"message":"157","line":52,"column":13,"nodeType":"134","messageId":"135","endLine":52,"endColumn":15},{"ruleId":"132","severity":1,"message":"158","line":55,"column":13,"nodeType":"134","messageId":"135","endLine":55,"endColumn":16},{"ruleId":"132","severity":1,"message":"159","line":58,"column":13,"nodeType":"134","messageId":"135","endLine":58,"endColumn":16},{"ruleId":"132","severity":1,"message":"160","line":61,"column":13,"nodeType":"134","messageId":"135","endLine":61,"endColumn":16},{"ruleId":"132","severity":1,"message":"161","line":64,"column":13,"nodeType":"134","messageId":"135","endLine":64,"endColumn":16},{"ruleId":"132","severity":1,"message":"162","line":67,"column":13,"nodeType":"134","messageId":"135","endLine":67,"endColumn":16},{"ruleId":"132","severity":1,"message":"163","line":110,"column":9,"nodeType":"134","messageId":"135","endLine":110,"endColumn":12},{"ruleId":"132","severity":1,"message":"139","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"164","line":11,"column":11,"nodeType":"134","messageId":"135","endLine":11,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":11,"column":49,"nodeType":"167","messageId":"168","endLine":11,"endColumn":51},{"ruleId":"132","severity":1,"message":"169","line":23,"column":7,"nodeType":"134","messageId":"135","endLine":23,"endColumn":12},{"ruleId":"128","replacedBy":"170"},{"ruleId":"130","replacedBy":"171"},{"ruleId":"132","severity":1,"message":"172","line":11,"column":8,"nodeType":"134","messageId":"135","endLine":11,"endColumn":14},{"ruleId":"132","severity":1,"message":"164","line":21,"column":11,"nodeType":"134","messageId":"135","endLine":21,"endColumn":23},{"ruleId":"173","severity":1,"message":"174","line":47,"column":14,"nodeType":"134","messageId":"175","endLine":47,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":65,"column":31,"nodeType":"178","messageId":"179","endLine":65,"endColumn":42},{"ruleId":"132","severity":1,"message":"180","line":85,"column":13,"nodeType":"134","messageId":"135","endLine":85,"endColumn":16},{"ruleId":"132","severity":1,"message":"181","line":86,"column":13,"nodeType":"134","messageId":"135","endLine":86,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":118,"column":21,"nodeType":"138","endLine":118,"endColumn":59},{"ruleId":"136","severity":1,"message":"137","line":135,"column":36,"nodeType":"138","endLine":135,"endColumn":81},{"ruleId":"136","severity":1,"message":"137","line":136,"column":37,"nodeType":"138","endLine":136,"endColumn":77},{"ruleId":"132","severity":1,"message":"139","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":25},{"ruleId":"132","severity":1,"message":"164","line":11,"column":11,"nodeType":"134","messageId":"135","endLine":11,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":11,"column":49,"nodeType":"167","messageId":"168","endLine":11,"endColumn":51},{"ruleId":"132","severity":1,"message":"172","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":16},{"ruleId":"132","severity":1,"message":"182","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":13},{"ruleId":"183","severity":1,"message":"184","line":26,"column":50,"nodeType":"144","messageId":"185","endLine":26,"endColumn":51},{"ruleId":"183","severity":1,"message":"184","line":26,"column":60,"nodeType":"144","messageId":"185","endLine":26,"endColumn":61},{"ruleId":"183","severity":1,"message":"184","line":9,"column":85,"nodeType":"144","messageId":"185","endLine":9,"endColumn":86},{"ruleId":"183","severity":1,"message":"184","line":9,"column":95,"nodeType":"144","messageId":"185","endLine":9,"endColumn":96},{"ruleId":"132","severity":1,"message":"186","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":15,"column":24,"nodeType":"189","endLine":17,"endColumn":5},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'da' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'MyComponent' is defined but never used.","'list' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'buddy' is assigned a value but never used.","'tommy' is assigned a value but never used.","'setResult' is assigned a value but never used.","'q1' is assigned a value but never used.","'q2' is assigned a value but never used.","'q3' is assigned a value but never used.","'q4' is assigned a value but never used.","'q5' is assigned a value but never used.","'q6' is assigned a value but never used.","'q7' is assigned a value but never used.","'q8' is assigned a value but never used.","'q9' is assigned a value but never used.","'q10' is assigned a value but never used.","'q11' is assigned a value but never used.","'q12' is assigned a value but never used.","'q13' is assigned a value but never used.","'q14' is assigned a value but never used.","'q15' is assigned a value but never used.","'questionList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'url_p' is assigned a value but never used.",["190"],["191"],"'Helmet' is defined but never used.","no-redeclare","'handleClick' is already defined.","redeclared","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'url' is assigned a value but never used.","'data' is assigned a value but never used.","'Willy' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Tweet2' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","no-global-assign","no-unsafe-negation"]