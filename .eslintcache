[{"/Users/choedaehan/Desktop/trip/src/index.js":"1","/Users/choedaehan/Desktop/trip/src/serviceWorker.js":"2","/Users/choedaehan/Desktop/trip/src/App.js":"3","/Users/choedaehan/Desktop/trip/src/pages/Consult.js":"4","/Users/choedaehan/Desktop/trip/src/pages/Result.js":"5","/Users/choedaehan/Desktop/trip/src/pages/test.js":"6","/Users/choedaehan/Desktop/trip/src/component/te2.js":"7","/Users/choedaehan/Desktop/trip/src/component/Question2.js":"8","/Users/choedaehan/Desktop/trip/src/component/kakaosharebutton.js":"9","/Users/choedaehan/Desktop/trip/src/layouts/Header.js":"10","/Users/choedaehan/Desktop/trip/src/pages/insta.js":"11","/Users/choedaehan/Desktop/trip/src/component/Question3.js":"12"},{"size":481,"mtime":1598270482000,"results":"13","hashOfConfig":"14"},{"size":5086,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":538,"mtime":1610467643566,"results":"16","hashOfConfig":"14"},{"size":2499,"mtime":1609954944155,"results":"17","hashOfConfig":"14"},{"size":3727,"mtime":1610467170884,"results":"18","hashOfConfig":"14"},{"size":3430,"mtime":1611917260421,"results":"19","hashOfConfig":"14"},{"size":1016,"mtime":1609843602940,"results":"20","hashOfConfig":"14"},{"size":1725,"mtime":1609955051493,"results":"21","hashOfConfig":"14"},{"size":2500,"mtime":1612185471207,"results":"22","hashOfConfig":"14"},{"size":1245,"mtime":1598271438000,"results":"23","hashOfConfig":"14"},{"size":6187,"mtime":1612976021467,"results":"24","hashOfConfig":"14"},{"size":1724,"mtime":1610094308788,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"19pd7la",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"/Users/choedaehan/Desktop/trip/src/index.js",[],["58","59"],"/Users/choedaehan/Desktop/trip/src/serviceWorker.js",[],"/Users/choedaehan/Desktop/trip/src/App.js",[],"/Users/choedaehan/Desktop/trip/src/pages/Consult.js",["60","61"],"import React, { useState } from 'react';\r\nimport data from '../data/data.json';\r\n// import answer from '../data/answer.json';\r\nimport styled from 'styled-components';\r\nimport Question from '../component/Question2';\r\nimport Header from '../layouts/Header';\r\n\r\nimport logo from '../assets/images/tripsoda_icon.png'\r\n\r\nexport default function Consult({ history }) { // 함수형 컴포넌트의 프로퍼티로 pros를 객체를 넘겨준다. 그중 하나의 프로퍼티 이름이 history이다.\r\n    const [result, setResult] = useState([])                         // result에게 데이터를 넘겨주려고 사용.\r\n    const [count, setCount] = useState(1);     // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\r\n    const list = data.list;\r\n    const da = \"\";\r\n    \r\n    const questionList = list.map((data, index) => {\r\n        return (\r\n            <Question \r\n                key={index} // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\r\n                onClick={handleClick} // 클릭 이벤트\r\n                title={data} // 문제 string\r\n                index={index + 1} // 문항번호\r\n                count={count} // 현재 문항번호(현재 위치)\r\n            />            \r\n        );\r\n    });\r\n\r\n    function handleClick(i, r) {\r\n        result[i - 1] = r;\r\n        setResult(result.concat());\r\n        setCount(count + 1);\r\n\r\n        if (list.length === i) {\r\n\r\n            history.push({\r\n                pathname: '/a',\r\n                state: { list: result }\r\n            });\r\n\r\n            // axios.get('/cc').then(res =>{\r\n            //     console.log(res.data)\r\n            // });\r\n\r\n            // $.ajax({\r\n            //     url : '/cc',\r\n            //     type : 'GET'\r\n\r\n            // });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConsultStyled>\r\n            <Header count={count} total={list.length} />\r\n            <div className=\"question-container\">\r\n                {questionList}\r\n            </div>\r\n            <div className=\"logo\">\r\n                <img src={logo}/>\r\n            </div>\r\n        </ConsultStyled>\r\n    )\r\n};\r\n\r\nconst ConsultStyled = styled.div`\r\n    max-width: 752px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 0 10px;\r\n    \r\n    .question-container {\r\n        margin-top: 100px;\r\n    }\r\n\r\n    .logo {\r\n        display: flex;\r\n        justify-content: center;\r\n        padding-top: 30px;\r\n    }\r\n`;","/Users/choedaehan/Desktop/trip/src/pages/Result.js",["62","63","64","65","66","67","68","69"],"// import React from 'react';\r\nimport React, { useEffect,useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Willy from '../assets/images/willy.png';\r\nimport Wigo from '../assets/images/wigo.png';\r\nimport MyComponent from '../component/te2';\r\nimport KakaoApi from '../component/kakaosharebutton';\r\n// import answer from '../data/answer.json';\r\nimport answer from '../data/answer2.json';\r\n\r\nexport default function Result({ location }) {\r\n    // layout 방식 : 태그를 직접하는 방식.\r\n\r\n\r\n    useEffect(() => { // useEffact는 render가 완료된 이후 react에서 자체적인 실행을 함. -> javascript 구문, react 구문 아님.\r\n        const script = document.createElement('script')\r\n        script.src = 'http://developers.kakao.com/sdk/js/kakao.js'\r\n        script.async = true // 동기화\r\n        document.body.appendChild(script)\r\n        return () => {\r\n        document.body.removeChild(script)\r\n        }\r\n    }, [])\r\n\r\n    const list = answer.answer;\r\n    let tatste = 0; // 취향\r\n    let interest = 0; // 관심사\r\n    let re = 0;\r\n    let cnt = 0;\r\n    // const [willy, setWilly] = useState('');             // id 상태 초기화\r\n    let willy = false; // 모험추구\r\n    let wigo = false; // 감각추구\r\n    let buddy = false; // 안정추구\r\n    let tommy = false; // 경험추구\r\n\r\n    let img1 = false;\r\n    let img2 = false;\r\n    \r\n    for( let num of location.state.list){\r\n        \r\n        if(cnt % 2 !== 0)\r\n            tatste = tatste + num;\r\n        else if(cnt % 2 === 0)\r\n            interest = interest + num;\r\n        \r\n        if(cnt == 14){\r\n            if(num === 1){\r\n                img1 = true;\r\n            }\r\n            else if(num === \"2\"){\r\n                img2 = true;\r\n            }\r\n        }\r\n        \r\n        cnt++;\r\n    }\r\n\r\n    \r\n    // 내외향성 // 개폐쇄성\r\n    if(tatste < 0 && interest < 0)\r\n    {\r\n        console.log('안정추구');\r\n        re = '안정추구';\r\n        buddy = true;\r\n    }\r\n    else if(tatste < 0 && interest > 0)\r\n    {\r\n        console.log('경험추구');\r\n        re = '경험추구';\r\n        tommy = true;\r\n    }\r\n    else if(tatste > 0 && interest < 0)\r\n    {\r\n        console.log('감각추구');\r\n        re = '감각추구';\r\n        wigo = true;\r\n    }\r\n    else if(tatste > 0 && interest > 0)\r\n    {\r\n        console.log('모험추구');\r\n        re = '모험추구';\r\n        willy = true;\r\n        // setWilly(1);\r\n        // console.log(willy);\r\n    }\r\n    \r\n    return (\r\n    \r\n        <Instagramback>\r\n            <ConsultStyled>\r\n           {re}\r\n           \r\n           {willy && <img src={Willy}/>}\r\n           {wigo && <img src={Wigo}/>}\r\n           {img1 && <div>액티비티</div>}\r\n           {img2 && <div>쇼핑</div>}\r\n           {/* {willy && <div style={{color : 'red'}}>아이디를 입력해주세요.</div>} */}\r\n           {/* {willy && <img src={Willy}/>} */}\r\n           {/* {willy && <img src={Willy}/>} */}\r\n\r\n           <KakaoApi/>\r\n        </ConsultStyled>\r\n        </Instagramback>\r\n       \r\n    )\r\n\r\n};\r\nconst Instagramback = styled.div`\r\nbackground-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\r\n    height: 100vh;\r\n`;\r\nconst ConsultStyled = styled.div`\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 0 10px;\r\n    // background-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\r\n    background-image:linear-gradient(60deg, rgb(238, 140, 89), rgb(188, 61, 166));\r\n    height: 100vh;\r\n\r\n    .logo {\r\n        display: flex;\r\n        justify-content: center;\r\n        padding-top: 30px;\r\n    }\r\n\r\n    .kakaoicon {\r\n        border : 0;\r\n    }\r\n`;","/Users/choedaehan/Desktop/trip/src/pages/test.js",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nexport default function Question({history, location}) {\n    \n    const [resultArray, setResult] = useState(location.state.list.concat());\n    let cnt = 0;\n    \n    let q1 = 0;\n    let q2 = 0;\n    let q3 = 0;\n    let q4 = 0;\n    let q5 = 0;\n    let q6 = 0;\n    let q7 = 0;\n    let q8 = 0;\n    let q9 = 0;\n    let q10 = 0;\n    let q11 = 0;\n    let q12 = 0;\n    let q13 = 0;\n    let q14 = 0;\n    let q15 = 0;\n\n    for( let num of location.state.list){\n        if(cnt === 0){\n            q1 = num;\n        }\n        if(cnt === 1){\n            q2 = num;\n        }\n        if(cnt === 2){\n            q3 = num;\n        }\n        if(cnt ===3 ){\n            q4 = num;\n        }\n        if(cnt === 4){\n            q5 = num;\n        }\n        if(cnt === 5){\n            q6 = num;\n        }\n        if(cnt === 6){\n            q7 = num;\n        }\n        if(cnt === 7){\n            q8 = num;\n        }\n        if(cnt === 8){\n            q9 = num;\n        }\n        if(cnt === 9){\n            q10 = num;\n        }\n        if(cnt === 10){\n            q11 = num;\n        }\n        if(cnt === 11){\n            q12 = num;\n        }\n        if(cnt === 12){\n            q13 = num;\n        }\n        if(cnt === 13){\n            q14 = num;\n        }\n        cnt++;\n    }\n\n    function handleClick1() {\n\n        resultArray[cnt] = \"1\";\n        q15 = 1;\n        save_result();\n    }\n\n    function handleClick2() {\n\n        resultArray[cnt] = \"2\";\n        q15 = 2;\n        save_result();\n    }\n\n    function handleClick3() {\n\n        resultArray[cnt] = \"3\";\n        q15 = 3;\n        save_result();\n    }\n\n    function handleClick4() {\n\n        resultArray[cnt] = \"4\";\n        q15 = 4;\n        save_result();\n    }\n\n    function handleClick5() {\n\n        resultArray[cnt] = \"5\";\n        q15 = 5;\n        save_result();\n    }\n\n    function handleClick6() {\n        \n        resultArray[cnt] = \"6\";\n        q15 = 6;\n        save_result();  \n    }\n\n    function save_result() {\n        let tag = \"tag\";\n        let character = \"Willy\";\n        let open =3;\n        let extrovert = 2;\n        axios.post(\"http://118.67.132.128:8000/save_result\", {params : {resultArray,tag ,character,open,extrovert}})\n      .then(res => {\n         \n            console.log(\"in!\")\n\n      })\n      .catch(res => {console.log(\"ERR\");});\n        \n    history.push({\n        pathname: '/result',\n        state: { list: resultArray }\n    });\n\n    };\n\n    return (\n        <div>\n            <div> 관심사 태그를 선택해 주세요!</div>\n            <QuestionStyled>\n                <button onClick={handleClick1}>#액티비티</button>\n                <button onClick={handleClick2}>#쇼핑</button>\n                <button onClick={handleClick3}>#맛집</button>\n                <button onClick={handleClick4}>#문호/예술</button>\n                <button onClick={handleClick5}>#파티</button>\n                <button onClick={handleClick6}>#자연</button>\n            </QuestionStyled>\n        </div>\n        \n    )\n}\n\nvar QuestionStyled = styled.div`\n\n    button {\n        width: 100px;\n        height: 107px;\n        background: #2f3438;\n        border-radius: 10px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 20px;\n        color: #fff;\n        font-weight: bold;\n        cursor: pointer;\n    }\n`;","/Users/choedaehan/Desktop/trip/src/component/te2.js",[],"/Users/choedaehan/Desktop/trip/src/component/Question2.js",["86","87","88"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport answer from '../data/answer2.json';\r\n\r\nexport default function Question({ title, count, index, onClick }) {\r\n\r\n    const list = answer.answer;\r\n    let answer1 = \"\";\r\n    let answer2 = \"\";\r\n    \r\n    const questionList = list.map((data, index) => {\r\n        \r\n        answer1 = data[count][0]\r\n        answer2 = data[count][1]\r\n        \r\n    });\r\n\r\n    return (\r\n        <QuestionStyled className={count === index ? 'active' : ''}> {/* 카운트와 인덱스가 같을 때 엑티브 클래스 추가. -> 액티브 클래스는 화면에 css를 보여주는 효과를 가진 클래스명*/}\r\n            <h2 className=\"question-title\">{title}</h2>\r\n            <ul>\r\n                <li onClick={() => onClick(index, 1)}>{answer1}</li>\r\n                <li onClick={() => onClick(index, -1)}>{answer2}</li>\r\n            </ul>\r\n        </QuestionStyled>\r\n    )\r\n}\r\n\r\nvar QuestionStyled = styled.div`\r\n    display: none;\r\n    opacity: 0;\r\n    transition: opacity 500ms;\r\n\r\n    .question-title {\r\n        color: #222;\r\n        font-weight: bold;\r\n        font-size: 30px;\r\n        margin-bottom: 100px;\r\n        height: 40px;\r\n    }\r\n\r\n    &.active {\r\n        display: block;\r\n        opacity: 1;\r\n    }\r\n\r\n    li {\r\n        width: 100%;\r\n        height: 107px;\r\n        background: #2f3438;\r\n        border-radius: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 20px;\r\n        color: #fff;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n    }\r\n\r\n    li:first-child {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    li:active {\r\n        background: #35c5f0;\r\n    }\r\n`;","/Users/choedaehan/Desktop/trip/src/component/kakaosharebutton.js",["89"],"import React from 'react'\nimport kakaoicon from '../assets/images/kakaoimage.png';\nimport styled from 'styled-components';\n\nconst Kakaostyle = styled.div`\n  button {\n    width : 50px;\n    height : 50px;\n    border : 0;\n    background : white;\n    outline: none;\n\n  }\n  img {\n    width : 100%;\n    // position : absolte;\n  }\n`;\n\nconst KakaoShareButton = () => {\n  \n  let check = 0;\n  let url_p = \"a\";\n\n  const createKakaoButton = () => {\n  \n    if(check !== 0) // == 값만 비교, === 타입과 값 비교\n    {\n        return;\n    }\n\n    check = 1;\n\n    // kakao sdk script이 정상적으로 불러와졌으면 window.Kakao로 접근이 가능합니다\n    if (window.Kakao) {\n      const kakao = window.Kakao\n      // 중복 initialization 방지\n      if (!kakao.isInitialized()) {\n        // 두번째 step 에서 가져온 javascript key 를 이용하여 initialize\n        kakao.init('528314a8da4cb592c76916878dd8af53');\n      }\n      kakao.Link.createDefaultButton({\n        // Render 부분 id=kakao-link-btn 을 찾아 그부분에 렌더링을 합니다\n        container: '#kakao-link-btn',\n        objectType: 'feed',\n        content: {\n          title: '딸기 치즈 케익',\n          description: '#리액트 #카카오 #공유버튼',\n          // imageUrl: '/Users/choedaehan/Desktop/trip/src/assets/images/kakaoimage.png', // i.e. process.env.FETCH_URL + '/logo.png'\n          imageUrl: '/Users/choedaehan/Desktop/trip/src/assets/images/kakaoimage.png',\n          link: {\n            mobileWebUrl: 'https://travelmbti.com',\n            webUrl: 'https://travelmbti.com', // window.location.href,\n          },\n        },\n        social: {\n            likeCount: 286,\n            commentCount: 50,\n            sharedCount: 845\n        },\n        buttons: [\n          {\n            title: '웹으로 보기',\n            link: {\n              mobileWebUrl: 'https://travelmbti.com',\n              webUrl: 'https://travelmbti.com',\n            },\n          },\n          {\n            title: '앱으로 보기',\n            link: {\n              mobileWebUrl: 'https://travelmbti.com',\n              webUrl: 'https://travelmbti.com',\n            },\n          },\n        ],\n      })\n    }\n  }\n  return (\n    <Kakaostyle>\n    <div className=\"kakaostyle\">\n      {/* Kakao share button */}\n      <button id=\"kakao-link-btn\" onClick={createKakaoButton}>\n        <img src={kakaoicon} alt=\"kakao-share-icon\" />\n      </button>\n    </div>\n    </Kakaostyle>\n  )\n}\nexport default KakaoShareButton","/Users/choedaehan/Desktop/trip/src/layouts/Header.js",[],"/Users/choedaehan/Desktop/trip/src/pages/insta.js",["90","91","92","93","94","95","96"],"/Users/choedaehan/Desktop/trip/src/component/Question3.js",["97","98","99"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport answer from '../data/answer2.json';\r\n\r\nexport default function Question({ title, count, index, onClick }) {\r\n\r\n    const list = answer.answer;\r\n    let answer1 = \"\";\r\n    let answer2 = \"\";\r\n    \r\n    const questionList = list.map((data, index) => {\r\n        \r\n        answer1 = data[count][0]\r\n        answer2 = data[count][1]\r\n        \r\n    });\r\n\r\n    return (\r\n        <QuestionStyled className={count === index ? 'active' : ''}> {/* 카운트와 인덱스가 같을 때 엑티브 클래스 추가. -> 액티브 클래스는 화면에 css를 보여주는 효과를 가진 클래스명*/}\r\n            <h2 className=\"question-title\">{title}</h2>\r\n            <ul>\r\n                <li onClick={() => onClick(index, 1)}>{answer1}</li>\r\n                <li onClick={() => onClick(index, -1)}>{answer2}</li>\r\n            </ul>\r\n        </QuestionStyled>\r\n    )\r\n}\r\n\r\nvar QuestionStyled = styled.div`\r\n    display: none;\r\n    opacity: 0;\r\n    transition: opacity 500ms;\r\n\r\n    .question-title {\r\n        color: #222;\r\n        font-weight: bold;\r\n        font-size: 30px;\r\n        margin-bottom: 100px;\r\n        height: 40px;\r\n    }\r\n\r\n    &.active {\r\n        display: block;\r\n        opacity: 1;\r\n    }\r\n\r\n    li {\r\n        width: 100%;\r\n        height: 50px;\r\n        background: #2f3438;\r\n        border-radius: 10px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 20px;\r\n        color: #fff;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n    }\r\n\r\n    li:first-child {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    li:active {\r\n        background: #35c5f0;\r\n    }\r\n`;",["100","101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":14,"column":11,"nodeType":"108","messageId":"109","endLine":14,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":59,"column":17,"nodeType":"112","endLine":59,"endColumn":34},{"ruleId":"106","severity":1,"message":"113","line":2,"column":27,"nodeType":"108","messageId":"109","endLine":2,"endColumn":35},{"ruleId":"106","severity":1,"message":"114","line":6,"column":8,"nodeType":"108","messageId":"109","endLine":6,"endColumn":19},{"ruleId":"106","severity":1,"message":"115","line":25,"column":11,"nodeType":"108","messageId":"109","endLine":25,"endColumn":15},{"ruleId":"116","severity":1,"message":"117","line":46,"column":16,"nodeType":"118","messageId":"119","endLine":46,"endColumn":18},{"ruleId":"106","severity":1,"message":"120","line":64,"column":9,"nodeType":"108","messageId":"109","endLine":64,"endColumn":14},{"ruleId":"106","severity":1,"message":"121","line":70,"column":9,"nodeType":"108","messageId":"109","endLine":70,"endColumn":14},{"ruleId":"110","severity":1,"message":"111","line":93,"column":22,"nodeType":"112","endLine":93,"endColumn":40},{"ruleId":"110","severity":1,"message":"111","line":94,"column":21,"nodeType":"112","endLine":94,"endColumn":38},{"ruleId":"106","severity":1,"message":"122","line":7,"column":25,"nodeType":"108","messageId":"109","endLine":7,"endColumn":34},{"ruleId":"106","severity":1,"message":"123","line":28,"column":13,"nodeType":"108","messageId":"109","endLine":28,"endColumn":15},{"ruleId":"106","severity":1,"message":"124","line":31,"column":13,"nodeType":"108","messageId":"109","endLine":31,"endColumn":15},{"ruleId":"106","severity":1,"message":"125","line":34,"column":13,"nodeType":"108","messageId":"109","endLine":34,"endColumn":15},{"ruleId":"106","severity":1,"message":"126","line":37,"column":13,"nodeType":"108","messageId":"109","endLine":37,"endColumn":15},{"ruleId":"106","severity":1,"message":"127","line":40,"column":13,"nodeType":"108","messageId":"109","endLine":40,"endColumn":15},{"ruleId":"106","severity":1,"message":"128","line":43,"column":13,"nodeType":"108","messageId":"109","endLine":43,"endColumn":15},{"ruleId":"106","severity":1,"message":"129","line":46,"column":13,"nodeType":"108","messageId":"109","endLine":46,"endColumn":15},{"ruleId":"106","severity":1,"message":"130","line":49,"column":13,"nodeType":"108","messageId":"109","endLine":49,"endColumn":15},{"ruleId":"106","severity":1,"message":"131","line":52,"column":13,"nodeType":"108","messageId":"109","endLine":52,"endColumn":15},{"ruleId":"106","severity":1,"message":"132","line":55,"column":13,"nodeType":"108","messageId":"109","endLine":55,"endColumn":16},{"ruleId":"106","severity":1,"message":"133","line":58,"column":13,"nodeType":"108","messageId":"109","endLine":58,"endColumn":16},{"ruleId":"106","severity":1,"message":"134","line":61,"column":13,"nodeType":"108","messageId":"109","endLine":61,"endColumn":16},{"ruleId":"106","severity":1,"message":"135","line":64,"column":13,"nodeType":"108","messageId":"109","endLine":64,"endColumn":16},{"ruleId":"106","severity":1,"message":"136","line":67,"column":13,"nodeType":"108","messageId":"109","endLine":67,"endColumn":16},{"ruleId":"106","severity":1,"message":"137","line":110,"column":9,"nodeType":"108","messageId":"109","endLine":110,"endColumn":12},{"ruleId":"106","severity":1,"message":"113","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"138","line":11,"column":11,"nodeType":"108","messageId":"109","endLine":11,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":11,"column":49,"nodeType":"141","messageId":"142","endLine":11,"endColumn":51},{"ruleId":"106","severity":1,"message":"143","line":23,"column":7,"nodeType":"108","messageId":"109","endLine":23,"endColumn":12},{"ruleId":"106","severity":1,"message":"138","line":18,"column":11,"nodeType":"108","messageId":"109","endLine":18,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":44,"column":14,"nodeType":"108","messageId":"146","endLine":44,"endColumn":25},{"ruleId":"147","severity":1,"message":"148","line":62,"column":31,"nodeType":"149","messageId":"150","endLine":62,"endColumn":42},{"ruleId":"106","severity":1,"message":"151","line":82,"column":13,"nodeType":"108","messageId":"109","endLine":82,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":111,"column":21,"nodeType":"112","endLine":111,"endColumn":59},{"ruleId":"110","severity":1,"message":"111","line":120,"column":36,"nodeType":"112","endLine":120,"endColumn":81},{"ruleId":"110","severity":1,"message":"111","line":121,"column":37,"nodeType":"112","endLine":121,"endColumn":77},{"ruleId":"106","severity":1,"message":"113","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"138","line":11,"column":11,"nodeType":"108","messageId":"109","endLine":11,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":11,"column":49,"nodeType":"141","messageId":"142","endLine":11,"endColumn":51},{"ruleId":"102","replacedBy":"152"},{"ruleId":"104","replacedBy":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'da' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'MyComponent' is defined but never used.","'list' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'buddy' is assigned a value but never used.","'tommy' is assigned a value but never used.","'setResult' is assigned a value but never used.","'q1' is assigned a value but never used.","'q2' is assigned a value but never used.","'q3' is assigned a value but never used.","'q4' is assigned a value but never used.","'q5' is assigned a value but never used.","'q6' is assigned a value but never used.","'q7' is assigned a value but never used.","'q8' is assigned a value but never used.","'q9' is assigned a value but never used.","'q10' is assigned a value but never used.","'q11' is assigned a value but never used.","'q12' is assigned a value but never used.","'q13' is assigned a value but never used.","'q14' is assigned a value but never used.","'q15' is assigned a value but never used.","'questionList' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'url_p' is assigned a value but never used.","no-redeclare","'handleClick' is already defined.","redeclared","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'url' is assigned a value but never used.",["154"],["155"],"no-global-assign","no-unsafe-negation"]