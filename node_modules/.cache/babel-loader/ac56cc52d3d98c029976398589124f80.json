{"ast":null,"code":"var _jsxFileName = \"/Users/choedaehan/Desktop/trip/src/pages/Consult.js\";\nimport React, { useState } from 'react';\nimport data from '../data/data.json';\nimport styled from 'styled-components';\nimport Question from '../component/Question';\nimport Header from '../layouts/Header';\nimport axios from 'axios';\nimport logo from '../assets/images/tripsoda_icon.png';\nexport default function Consult({\n  history\n}) {\n  const [result, setResult] = useState([]);\n  const [count, setCount] = useState(1);\n  const list = data.list;\n  const questionList = list.map((data, index) => {\n    return /*#__PURE__*/React.createElement(Question, {\n      key: index,\n      onClick: handleClick,\n      title: data,\n      index: index + 1,\n      count: count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    });\n  });\n\n  function handleClick(i, r) {\n    result[i - 1] = r;\n    setCount(count + 1);\n\n    if (list.length === i) {\n      axios.get('/cc').then(res => {\n        console.log(res.data);\n      }); // history.push({\n      //     pathname: '/result',\n      //     state: { list: result }\n      // });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(ConsultStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    count: count,\n    total: list.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, questionList), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })));\n}\n;\nconst ConsultStyled = styled.div`\n    max-width: 752px;\n    margin: 0 auto;\n    width: 100%;\n    box-sizing: border-box;\n    padding: 0 10px;\n    \n    .question-container {\n        margin-top: 100px;\n    }\n\n    .logo {\n        display: flex;\n        justify-content: center;\n        padding-top: 30px;\n    }\n`;","map":{"version":3,"sources":["/Users/choedaehan/Desktop/trip/src/pages/Consult.js"],"names":["React","useState","data","styled","Question","Header","axios","logo","Consult","history","result","setResult","count","setCount","list","questionList","map","index","handleClick","i","r","length","get","then","res","console","log","ConsultStyled","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,oCAAjB;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AACzC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMa,IAAI,GAAGZ,IAAI,CAACY,IAAlB;AACA,QAAMC,YAAY,GAAGD,IAAI,CAACE,GAAL,CAAS,CAACd,IAAD,EAAOe,KAAP,KAAiB;AAC3C,wBACI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,OAAO,EAAEC,WAA/B;AAA4C,MAAA,KAAK,EAAEhB,IAAnD;AAAyD,MAAA,KAAK,EAAEe,KAAK,GAAG,CAAxE;AAA2E,MAAA,KAAK,EAAEL,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAJoB,CAArB;;AAMA,WAASM,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACvBV,IAAAA,MAAM,CAACS,CAAC,GAAG,CAAL,CAAN,GAAgBC,CAAhB;AACAP,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;;AAEA,QAAIE,IAAI,CAACO,MAAL,KAAgBF,CAApB,EAAuB;AAEnBb,MAAAA,KAAK,CAACgB,GAAN,CAAU,KAAV,EAAiBC,IAAjB,CAAsBC,GAAG,IAAG;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACtB,IAAhB;AACH,OAFD,EAFmB,CAMnB;AACA;AACA;AACA;AACH;AACJ;;AAED,sBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEU,KAAf;AAAsB,IAAA,KAAK,EAAEE,IAAI,CAACO,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,YADL,CAFJ,eAKI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAER,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ;AAWH;AAAA;AAED,MAAMoB,aAAa,GAAGxB,MAAM,CAACyB,GAAI;;;;;;;;;;;;;;;;CAAjC","sourcesContent":["import React, { useState } from 'react';\r\nimport data from '../data/data.json';\r\nimport styled from 'styled-components';\r\nimport Question from '../component/Question'; \r\nimport Header from '../layouts/Header';\r\nimport axios from 'axios';\r\n\r\nimport logo from '../assets/images/tripsoda_icon.png'\r\n\r\nexport default function Consult({ history }) {\r\n    const [result, setResult] = useState([]);\r\n    const [count, setCount] = useState(1);\r\n    const list = data.list;\r\n    const questionList = list.map((data, index) => {\r\n        return (\r\n            <Question key={index} onClick={handleClick} title={data} index={index + 1} count={count} />            \r\n        );\r\n    });\r\n\r\n    function handleClick(i, r) {\r\n        result[i - 1] = r;\r\n        setCount(count + 1);\r\n\r\n        if (list.length === i) {\r\n\r\n            axios.get('/cc').then(res =>{\r\n                console.log(res.data)\r\n            });\r\n\r\n            // history.push({\r\n            //     pathname: '/result',\r\n            //     state: { list: result }\r\n            // });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConsultStyled>\r\n            <Header count={count} total={list.length} />\r\n            <div className=\"question-container\">\r\n                {questionList}\r\n            </div>\r\n            <div className=\"logo\">\r\n                <img src={logo}/>\r\n            </div>\r\n        </ConsultStyled>\r\n    )\r\n};\r\n\r\nconst ConsultStyled = styled.div`\r\n    max-width: 752px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 0 10px;\r\n    \r\n    .question-container {\r\n        margin-top: 100px;\r\n    }\r\n\r\n    .logo {\r\n        display: flex;\r\n        justify-content: center;\r\n        padding-top: 30px;\r\n    }\r\n`;"]},"metadata":{},"sourceType":"module"}