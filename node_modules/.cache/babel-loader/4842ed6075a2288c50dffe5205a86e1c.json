{"ast":null,"code":"var _jsxFileName = \"/Users/choedaehan/Desktop/trip/src/component/consult/QuestionComponent.js\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport * as context from \"../../QuestionContext\";\nimport { list } from \"../../setDate\";\nimport { questionAndTagListCount } from \"../../data/cosultListMeta\";\nimport { getType } from \"../../units\";\nimport empty_heart_icon from \"../../assets/icons/empty_heart_icon.svg\";\nimport filled_heart_icon from \"../../assets/icons/filled_heart_icon.svg\";\nimport { useHistory } from \"react-router-dom\";\nimport { postResult } from \"../../api\";\nimport ReactTouchEvents from \"react-touch-events\";\nexport default function QuestionComponent() {\n  let totalCount = context.useTotalCount();\n  const id = totalCount - 1;\n  const setTotalCount = context.useSetTotalCount();\n  const questionCount = context.useQuestionCount();\n  const setQuestionCount = context.useSetQuestionCount();\n  const result = context.useResultState();\n  const setResult = context.useSetResult();\n  const history = useHistory();\n\n  function setReusultAndIncreaseId(data) {\n    if (questionCount === questionAndTagListCount) {\n      result[14] = data;\n      setResult(result.concat()); // >>>>>>>>>>>>>>>FIXME: seperate this code<<<<<<<<<<<<<<\n      // >>>>>>>>>>>>>>>NOTE: (start) count and get character<<<<<<<<<<<<<<\n\n      let extrovert = 0; // 내외향성\n\n      let open = 0; // 개폐쇄성\n\n      let cnt = 1;\n      let tag = \"\";\n      let selected_char = \"\";\n\n      for (let num of result) {\n        if (cnt !== 15) {\n          if (cnt % 2 !== 0) extrovert = extrovert + num;else if (cnt % 2 === 0) open = open + num;\n        } else {\n          tag = num;\n        }\n\n        cnt++;\n      } // 내외향성 // 개폐쇄성\n\n\n      if (extrovert < 0 && open < 0) {\n        selected_char = \"Buddy\";\n      } else if (extrovert < 0 && open > 0) {\n        selected_char = \"Tommy\";\n      } else if (extrovert > 0 && open < 0) {\n        selected_char = \"Wigo\";\n      } else if (extrovert > 0 && open > 0) {\n        selected_char = \"Willy\";\n      } // >>>>>>>>>>>>>>>(end) count and get character<<<<<<<<<<<<<<\n      // >>>>>>>>>>>>>>>NOTE: call api to post result<<<<<<<<<<<<<<\n\n\n      const resultArray = result.slice(0, result.length - 1);\n      postResult(resultArray, tag, selected_char, extrovert, open); // >>>>>>>>>>>>>>>NOTE: history push to result page<<<<<<<<<<<<<<\n\n      history.push({\n        pathname: \"/result\",\n        state: {\n          selected_char: selected_char,\n          tag: tag\n        }\n      });\n    } else if (questionCount < questionAndTagListCount) {\n      result[questionCount - 1] = data;\n      setResult(result.concat());\n      setTotalCount(totalCount + 1); // 22가되면 끝나야돼\n\n      setQuestionCount(questionCount + 1);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(QuestionStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, getType(list[id]) === \"question\" ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReactTouchEvents, {\n    onTap: () => setReusultAndIncreaseId(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, list[id].content.multipleChoice[0].split(\"\\n\").map((line, _) => /*#__PURE__*/React.createElement(\"span\", {\n    key: _,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, line, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"empty-heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: empty_heart_icon,\n    alt: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fill-heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: filled_heart_icon,\n    alt: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(ReactTouchEvents, {\n    onTap: () => setReusultAndIncreaseId(-1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, list[id].content.multipleChoice[1].split(\"\\n\").map((line, _) => /*#__PURE__*/React.createElement(\"span\", {\n    key: _,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, line, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"empty-heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: empty_heart_icon,\n    alt: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fill-heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: filled_heart_icon,\n    alt: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, list[id].content.multipleChoice.map((tag, number) => /*#__PURE__*/React.createElement(ReactTouchEvents, {\n    onTap: () => setReusultAndIncreaseId(number),\n    key: number,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, tag), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fill-heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: filled_heart_icon,\n    alt: \"heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"empty-heart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: empty_heart_icon,\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  })))))));\n}\nvar QuestionStyled = styled.div`\n  li {\n    width: 100%;\n    height: 70px;\n    background: #fff;\n    padding: 1em;\n    align-items: center;\n    color: #000;\n    cursor: pointer;\n    display: flex;\n    justify-content: space-between;\n  }\n  li p {\n    line-height: 140%;\n  }\n  li > .fill-heart {\n    display: none;\n  }\n  li > .empty-heart > img {\n    display: inherit;\n  }\n  li:active > .fill-heart {\n    display: inherit;\n  }\n  li img {\n    width: 20px;\n    height: 18px;\n  }\n  li:active > .empty-heart {\n    display: none;\n  }\n  li:active > .fill-heart {\n    display: inherit;\n  }\n`;","map":{"version":3,"sources":["/Users/choedaehan/Desktop/trip/src/component/consult/QuestionComponent.js"],"names":["React","useState","styled","context","list","questionAndTagListCount","getType","useHistory","postResult","ReactTouchEvents","QuestionComponent","totalCount","useTotalCount","id","setTotalCount","useSetTotalCount","questionCount","useQuestionCount","setQuestionCount","useSetQuestionCount","result","useResultState","setResult","useSetResult","history","setReusultAndIncreaseId","data","concat","extrovert","open","cnt","tag","selected_char","num","resultArray","slice","length","push","pathname","state","content","multipleChoice","split","map","line","_","empty_heart_icon","filled_heart_icon","number","QuestionStyled","div"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport * as context from \"../../QuestionContext\";\nimport { list } from \"../../setDate\";\nimport { questionAndTagListCount } from \"../../data/cosultListMeta\";\nimport { getType } from \"../../units\";\nimport empty_heart_icon from \"../../assets/icons/empty_heart_icon.svg\";\nimport filled_heart_icon from \"../../assets/icons/filled_heart_icon.svg\";\nimport { useHistory } from \"react-router-dom\";\nimport { postResult } from \"../../api\";\nimport ReactTouchEvents from \"react-touch-events\";\n\nexport default function QuestionComponent() {\n  let totalCount = context.useTotalCount();\n  const id = totalCount - 1;\n  const setTotalCount = context.useSetTotalCount();\n  const questionCount = context.useQuestionCount();\n  const setQuestionCount = context.useSetQuestionCount();\n  const result = context.useResultState();\n  const setResult = context.useSetResult();\n  const history = useHistory();\n\n  function setReusultAndIncreaseId(data) {\n    if (questionCount === questionAndTagListCount) {\n      result[14] = data;\n      setResult(result.concat());\n      // >>>>>>>>>>>>>>>FIXME: seperate this code<<<<<<<<<<<<<<\n      // >>>>>>>>>>>>>>>NOTE: (start) count and get character<<<<<<<<<<<<<<\n      let extrovert = 0; // 내외향성\n      let open = 0; // 개폐쇄성\n\n      let cnt = 1;\n      let tag = \"\";\n      let selected_char = \"\";\n\n      for (let num of result) {\n        if (cnt !== 15) {\n          if (cnt % 2 !== 0) extrovert = extrovert + num;\n          else if (cnt % 2 === 0) open = open + num;\n        } else {\n          tag = num;\n        }\n        cnt++;\n      }\n\n      // 내외향성 // 개폐쇄성\n      if (extrovert < 0 && open < 0) {\n        selected_char = \"Buddy\";\n      } else if (extrovert < 0 && open > 0) {\n        selected_char = \"Tommy\";\n      } else if (extrovert > 0 && open < 0) {\n        selected_char = \"Wigo\";\n      } else if (extrovert > 0 && open > 0) {\n        selected_char = \"Willy\";\n      }\n      // >>>>>>>>>>>>>>>(end) count and get character<<<<<<<<<<<<<<\n\n      // >>>>>>>>>>>>>>>NOTE: call api to post result<<<<<<<<<<<<<<\n      const resultArray = result.slice(0, result.length - 1);\n      postResult(resultArray, tag, selected_char, extrovert, open);\n\n      // >>>>>>>>>>>>>>>NOTE: history push to result page<<<<<<<<<<<<<<\n      history.push({\n        pathname: \"/result\",\n        state: { selected_char: selected_char, tag: tag },\n      });\n    } else if (questionCount < questionAndTagListCount) {\n      result[questionCount - 1] = data;\n      setResult(result.concat());\n      setTotalCount(totalCount + 1); // 22가되면 끝나야돼\n      setQuestionCount(questionCount + 1);\n    }\n  }\n\n  return (\n    <QuestionStyled>\n      {getType(list[id]) === \"question\" ? (\n        <ul>\n          <ReactTouchEvents onTap={() => setReusultAndIncreaseId(1)}>\n            <li>\n              <p>\n                {list[id].content.multipleChoice[0]\n                  .split(\"\\n\")\n                  .map((line, _) => (\n                    <span key={_}>\n                      {line}\n                      <br />\n                    </span>\n                  ))}\n              </p>\n              <span className=\"empty-heart\">\n                <img src={empty_heart_icon} alt=\"heart\" />\n              </span>\n              <span className=\"fill-heart\">\n                <img src={filled_heart_icon} alt=\"heart\" />\n              </span>\n            </li>\n          </ReactTouchEvents>\n          <ReactTouchEvents onTap={() => setReusultAndIncreaseId(-1)}>\n            <li>\n              <p>\n                {list[id].content.multipleChoice[1]\n                  .split(\"\\n\")\n                  .map((line, _) => (\n                    <span key={_}>\n                      {line}\n                      <br />\n                    </span>\n                  ))}\n              </p>\n              <span className=\"empty-heart\">\n                <img src={empty_heart_icon} alt=\"heart\" />\n              </span>\n              <span className=\"fill-heart\">\n                {/* <FontAwesomeIcon icon={faHeart} /> */}\n                <img src={filled_heart_icon} alt=\"heart\" />\n              </span>\n            </li>\n          </ReactTouchEvents>\n        </ul>\n      ) : (\n        <ul>\n          {list[id].content.multipleChoice.map((tag, number) => (\n            <ReactTouchEvents\n              onTap={() => setReusultAndIncreaseId(number)}\n              key={number}\n            >\n              <li>\n                <p>{tag}</p>\n                <span className=\"fill-heart\">\n                  {/* <FontAwesomeIcon icon={faHeart} /> */}\n                  <img src={filled_heart_icon} alt=\"heart\" />\n                </span>\n                <span className=\"empty-heart\">\n                  <img src={empty_heart_icon} alt=\"icon\" />\n                </span>\n              </li>\n            </ReactTouchEvents>\n          ))}\n        </ul>\n      )}\n    </QuestionStyled>\n  );\n}\n\nvar QuestionStyled = styled.div`\n  li {\n    width: 100%;\n    height: 70px;\n    background: #fff;\n    padding: 1em;\n    align-items: center;\n    color: #000;\n    cursor: pointer;\n    display: flex;\n    justify-content: space-between;\n  }\n  li p {\n    line-height: 140%;\n  }\n  li > .fill-heart {\n    display: none;\n  }\n  li > .empty-heart > img {\n    display: inherit;\n  }\n  li:active > .fill-heart {\n    display: inherit;\n  }\n  li img {\n    width: 20px;\n    height: 18px;\n  }\n  li:active > .empty-heart {\n    display: none;\n  }\n  li:active > .fill-heart {\n    display: inherit;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}