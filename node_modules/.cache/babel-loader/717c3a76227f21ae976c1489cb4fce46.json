{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/choedaehan/Desktop/trip/src/pages/insta.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Heart_fill from '../assets/images/heart2.png';\nimport Heart from '../assets/images/heart1.png';\nimport Willy from '../assets/images/willy.png';\nimport data from '../data/data.json';\nimport Question from '../component/Question3';\nimport axios from 'axios';\nexport default function Result({\n  history\n}) {\n  _s();\n\n  const [result, setResult] = useState([]); // result에게 데이터를 넘겨주려고 사용.\n\n  const [count, setCount] = useState(1); // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\n\n  const list = data.list;\n  let [like_check, setLike] = useState(false);\n  const questionList = list.map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(Question, {\n      // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\n      onClick: handleClick // 클릭 이벤트\n      ,\n      title: data // 문제 string\n      ,\n      index: index + 1 // 문항번호\n      ,\n      count: count // 현재 문항번호(현재 위치)\n\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  });\n\n  function handleClick(i, r) {\n    result[i - 1] = r;\n    setResult(result.concat());\n    setCount(count + 1);\n\n    if (list.length === i) {\n      history.push({\n        pathname: '/a',\n        state: {\n          list: result\n        }\n      });\n    }\n  }\n\n  function handleClick() {\n    if (like_check === true) {\n      console.log(\"ssss\");\n      setLike(false);\n    } else {\n      console.log(\"aaaaa\");\n      setLike(true);\n    }\n  }\n\n  function search_data() {\n    // const response = await axios.get(\n    axios.get('http://13.209.8.68:3000/getData').then(res => {\n      console.log(res.data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Instagramback, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"circle\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile\",\n          src: Willy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: search_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://13.209.8.68:3000/getData\",\n        children: \"sss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bottom, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heart\",\n        children: [like_check && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Heart_fill,\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 36\n        }, this), !like_check && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Heart,\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Result, \"5tpwJuulp2XHfUQQ0rpwuWakwsI=\");\n\n_c = Result;\n;\nconst Instagramback = styled.div`\n    background-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\n    height: 100vh;\n\n    .li {\n        font-family: Billabong;\n    }\n`;\n_c2 = Instagramback;\nconst Header = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,230%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .circle {\n        width : 42px;\n        height : 42px;\n        border : 1px solid #111; // solid는 선의 모양을 표현\n        border-radius : 100%; // 윤곽선 표현 100%애 가까울 수록 둥글어진다. px로도 사용가능\n        display : block;\n        position : absolute;\n        top : 15px;\n        left : 20px;\n    }\n\n    .profile {\n        width : 100$;\n        height : 100%;\n        position : absolute;\n        top : 0%;\n        left : 15%;\n        // transform : translate(50%,50%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n    }\n`;\n_c3 = Header;\nconst Body = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 300px;\n    top : 20%;\n    left : 50%;\n    transform : translate(-0%,55%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n`;\n_c4 = Body;\nconst Bottom = styled.div`\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,229%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .heart {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n    }\n\n\n    .heart2 {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n        top : 20%;\n        left : 50%;\n        transform : translate(0%,0%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n        \n    }\n`;\n_c5 = Bottom;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Result\");\n$RefreshReg$(_c2, \"Instagramback\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Body\");\n$RefreshReg$(_c5, \"Bottom\");","map":{"version":3,"sources":["/Users/choedaehan/Desktop/trip/src/pages/insta.js"],"names":["React","useState","styled","Heart_fill","Heart","Willy","data","Question","axios","Result","history","result","setResult","count","setCount","list","like_check","setLike","questionList","map","index","handleClick","i","r","concat","length","push","pathname","state","console","log","search_data","get","then","res","Instagramback","div","Header","Body","Bottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Heart_fill from '../assets/images/heart2.png';\nimport Heart from '../assets/images/heart1.png';\nimport Willy from '../assets/images/willy.png';\nimport data from '../data/data.json';\nimport Question from '../component/Question3';\nimport axios from 'axios';\n\n\nexport default function Result({ history }) {\n    \n    const [result, setResult] = useState([])                         // result에게 데이터를 넘겨주려고 사용.\n    const [count, setCount] = useState(1);     // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\n    const list = data.list;\n    let [like_check, setLike] = useState(false);\n\n    const questionList = list.map((data, index) => {\n        return (\n            <Question \n                key={index} // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\n                onClick={handleClick} // 클릭 이벤트\n                title={data} // 문제 string\n                index={index + 1} // 문항번호\n                count={count} // 현재 문항번호(현재 위치)\n            />            \n        );\n    });\n\n    function handleClick(i, r) {\n        result[i - 1] = r;\n        setResult(result.concat());\n        setCount(count + 1);\n\n        if (list.length === i) {\n\n            history.push({\n                pathname: '/a',\n                state: { list: result }\n            });\n        }\n    }\n    \n    function handleClick() {\n        if(like_check === true){\n            console.log(\"ssss\");\n            setLike(false);\n        }\n        else{\n            console.log(\"aaaaa\");\n            setLike(true);\n        }\n            \n    }\n\n    function search_data(){\n        // const response = await axios.get(\n        axios.get('http://13.209.8.68:3000/getData').then(res =>{\n                console.log(res.data)\n        });\n    }\n\n    return (\n    \n        <Instagramback>\n            <Header>\n                <span className=\"circle\">\n                    <img className=\"profile\" src={Willy}/>\n                </span>\n            </Header>\n            <Body>\n                <button onClick={search_data}></button>\n                <a href=\"http://13.209.8.68:3000/getData\">sss</a>\n            </Body>\n            <Bottom>\n                <div className=\"heart\">\n                    {like_check && <img src={Heart_fill} onClick={handleClick}/>}\n                    {!like_check && <img src={Heart} onClick={handleClick}/>}\n                    {/* {!like_check && <img src={Heart}/>} */}\n                    {/* <img className=\"heart\" src={Heart_fill} onClick={handleClick}/> */}\n                    {/* <img className=\"heart2\" src={Heart}/> */}\n                </div>\n            </Bottom>\n        </Instagramback>\n       \n    )\n\n};\n\nconst Instagramback = styled.div`\n    background-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\n    height: 100vh;\n\n    .li {\n        font-family: Billabong;\n    }\n`;\n\nconst Header = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,230%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .circle {\n        width : 42px;\n        height : 42px;\n        border : 1px solid #111; // solid는 선의 모양을 표현\n        border-radius : 100%; // 윤곽선 표현 100%애 가까울 수록 둥글어진다. px로도 사용가능\n        display : block;\n        position : absolute;\n        top : 15px;\n        left : 20px;\n    }\n\n    .profile {\n        width : 100$;\n        height : 100%;\n        position : absolute;\n        top : 0%;\n        left : 15%;\n        // transform : translate(50%,50%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n    }\n`;\n\nconst Body = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 300px;\n    top : 20%;\n    left : 50%;\n    transform : translate(-0%,55%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n`;\n\n\nconst Bottom = styled.div`\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,229%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .heart {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n    }\n\n\n    .heart2 {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n        top : 20%;\n        left : 50%;\n        transform : translate(0%,0%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n        \n    }\n`;"]},"metadata":{},"sourceType":"module"}