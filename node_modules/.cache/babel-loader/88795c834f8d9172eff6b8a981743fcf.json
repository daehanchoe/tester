{"ast":null,"code":"var _jsxFileName = \"/Users/choedaehan/Desktop/trip/src/pages/Consult.js\";\nimport React, { useState } from 'react';\nimport data from '../data/data.json';\nimport styled from 'styled-components';\nimport Question from '../component/Question';\nimport Header from '../layouts/Header';\nimport axios from 'axios';\nimport logo from '../assets/images/tripsoda_icon.png';\nimport { METHODS } from 'http';\nexport default function Consult({\n  history\n}) {\n  // 함수형 컴포넌트의 프로퍼티로 pros를 객체를 넘겨준다. 그중 하나의 프로퍼티 이름이 history이다.\n  const result = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // result에게 데이터를 넘겨주려고 사용.\n\n  const [count, setCount] = useState(1); // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\n\n  const list = data.list;\n  const questionList = list.map((data, index) => {\n    return /*#__PURE__*/React.createElement(Question, {\n      key: index // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\n      ,\n      onClick: handleClick // 클릭 이벤트\n      ,\n      title: data // 문제 string\n      ,\n      index: index + 1 // 문항번호\n      ,\n      count: count // 현재 문항번호(현재 위치)\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    });\n  });\n\n  function handleClick(i, r) {\n    result[i - 1] = r;\n    setCount(count + 1);\n\n    if (list.length === i) {\n      history.push({\n        pathname: '/result',\n        state: {\n          list: result\n        }\n      }); // axios.get('/cc').then(res =>{\n      //     console.log(res.data)\n      // });\n      // $.ajax({\n      //     url : '/cc',\n      //     type : 'GET'\n      // });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(ConsultStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    count: count,\n    total: list.length,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, questionList), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  })));\n}\n;\nconst ConsultStyled = styled.div`\n    max-width: 752px;\n    margin: 0 auto;\n    width: 100%;\n    box-sizing: border-box;\n    padding: 0 10px;\n    \n    .question-container {\n        margin-top: 100px;\n    }\n\n    .logo {\n        display: flex;\n        justify-content: center;\n        padding-top: 30px;\n    }\n`;","map":{"version":3,"sources":["/Users/choedaehan/Desktop/trip/src/pages/Consult.js"],"names":["React","useState","data","styled","Question","Header","axios","logo","METHODS","Consult","history","result","count","setCount","list","questionList","map","index","handleClick","i","r","length","push","pathname","state","ConsultStyled","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,oCAAjB;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA8B;AAAE;AAC3C,QAAMC,MAAM,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAAf,CADyC,CACqB;;AAC9D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC,CAFyC,CAEE;;AAC3C,QAAMa,IAAI,GAAGZ,IAAI,CAACY,IAAlB;AAEA,QAAMC,YAAY,GAAGD,IAAI,CAACE,GAAL,CAAS,CAACd,IAAD,EAAOe,KAAP,KAAiB;AAC3C,wBACI,oBAAC,QAAD;AACI,MAAA,GAAG,EAAEA,KADT,CACgB;AADhB;AAEI,MAAA,OAAO,EAAEC,WAFb,CAE0B;AAF1B;AAGI,MAAA,KAAK,EAAEhB,IAHX,CAGiB;AAHjB;AAII,MAAA,KAAK,EAAEe,KAAK,GAAG,CAJnB,CAIsB;AAJtB;AAKI,MAAA,KAAK,EAAEL,KALX,CAKkB;AALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AASH,GAVoB,CAArB;;AAYA,WAASM,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACvBT,IAAAA,MAAM,CAACQ,CAAC,GAAG,CAAL,CAAN,GAAgBC,CAAhB;AAEAP,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;;AAEA,QAAIE,IAAI,CAACO,MAAL,KAAgBF,CAApB,EAAuB;AAEnBT,MAAAA,OAAO,CAACY,IAAR,CAAa;AACTC,QAAAA,QAAQ,EAAE,SADD;AAETC,QAAAA,KAAK,EAAE;AAAEV,UAAAA,IAAI,EAAEH;AAAR;AAFE,OAAb,EAFmB,CAOnB;AACA;AACA;AAEA;AACA;AACA;AAEA;AACH;AACJ;;AAED,sBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEC,KAAf;AAAsB,IAAA,KAAK,EAAEE,IAAI,CAACO,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,YADL,CAFJ,eAKI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAER,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CADJ;AAWH;AAAA;AAED,MAAMkB,aAAa,GAAGtB,MAAM,CAACuB,GAAI;;;;;;;;;;;;;;;;CAAjC","sourcesContent":["import React, { useState } from 'react';\r\nimport data from '../data/data.json';\r\nimport styled from 'styled-components';\r\nimport Question from '../component/Question';\r\nimport Header from '../layouts/Header';\r\nimport axios from 'axios';\r\n\r\nimport logo from '../assets/images/tripsoda_icon.png'\r\nimport { METHODS } from 'http';\r\n\r\nexport default function Consult({ history }) { // 함수형 컴포넌트의 프로퍼티로 pros를 객체를 넘겨준다. 그중 하나의 프로퍼티 이름이 history이다.\r\n    const result = [0,0,0,0,0,0,0,0,0,0];                         // result에게 데이터를 넘겨주려고 사용.\r\n    const [count, setCount] = useState(1);     // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\r\n    const list = data.list;\r\n    \r\n    const questionList = list.map((data, index) => {\r\n        return (\r\n            <Question \r\n                key={index} // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\r\n                onClick={handleClick} // 클릭 이벤트\r\n                title={data} // 문제 string\r\n                index={index + 1} // 문항번호\r\n                count={count} // 현재 문항번호(현재 위치)\r\n            />            \r\n        );\r\n    });\r\n\r\n    function handleClick(i, r) {\r\n        result[i - 1] = r;\r\n        \r\n        setCount(count + 1);\r\n\r\n        if (list.length === i) {\r\n\r\n            history.push({\r\n                pathname: '/result',\r\n                state: { list: result }\r\n            });\r\n\r\n            // axios.get('/cc').then(res =>{\r\n            //     console.log(res.data)\r\n            // });\r\n\r\n            // $.ajax({\r\n            //     url : '/cc',\r\n            //     type : 'GET'\r\n\r\n            // });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConsultStyled>\r\n            <Header count={count} total={list.length} />\r\n            <div className=\"question-container\">\r\n                {questionList}\r\n            </div>\r\n            <div className=\"logo\">\r\n                <img src={logo}/>\r\n            </div>\r\n        </ConsultStyled>\r\n    )\r\n};\r\n\r\nconst ConsultStyled = styled.div`\r\n    max-width: 752px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 0 10px;\r\n    \r\n    .question-container {\r\n        margin-top: 100px;\r\n    }\r\n\r\n    .logo {\r\n        display: flex;\r\n        justify-content: center;\r\n        padding-top: 30px;\r\n    }\r\n`;"]},"metadata":{},"sourceType":"module"}