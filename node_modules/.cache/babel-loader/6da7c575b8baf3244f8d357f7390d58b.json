{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/choedaehan/Desktop/trip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/choedaehan/Desktop/trip/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    max-width: 752px;\\n    margin: 0 auto;\\n    width: 100%;\\n    box-sizing: border-box;\\n    padding: 0 10px;\\n    \\n    .question-container {\\n        margin-top: 100px;\\n    }\\n\\n    .logo {\\n        display: flex;\\n        justify-content: center;\\n        padding-top: 30px;\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import data from'../data/data.json';// import answer from '../data/answer.json';\nimport styled from'styled-components';import Question from'../component/Question2';import Header from'../layouts/Header';import axios from'axios';import logo from'../assets/images/tripsoda_icon.png';import{METHODS}from'http';export default function Consult(_ref){var history=_ref.history;// 함수형 컴포넌트의 프로퍼티로 pros를 객체를 넘겨준다. 그중 하나의 프로퍼티 이름이 history이다.\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),result=_useState2[0],setResult=_useState2[1];// result에게 데이터를 넘겨주려고 사용.\nvar _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),count=_useState4[0],setCount=_useState4[1];// 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\nvar list=data.list;var da=\"\";var questionList=list.map(function(data,index){return/*#__PURE__*/_jsx(Question,{// react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\nonClick:handleClick// 클릭 이벤트\n,title:data// 문제 string\n,index:index+1// 문항번호\n,count:count// 현재 문항번호(현재 위치)\n},index);});function handleClick(i,r){result[i-1]=r;setResult(result.concat());setCount(count+1);if(list.length===i){history.push({pathname:'/a',state:{list:result}});// axios.get('/cc').then(res =>{\n//     console.log(res.data)\n// });\n// $.ajax({\n//     url : '/cc',\n//     type : 'GET'\n// });\n}}return/*#__PURE__*/_jsxs(ConsultStyled,{children:[/*#__PURE__*/_jsx(Header,{count:count,total:list.length}),/*#__PURE__*/_jsx(\"div\",{className:\"question-container\",children:questionList}),/*#__PURE__*/_jsx(\"div\",{className:\"logo\",children:/*#__PURE__*/_jsx(\"img\",{src:logo})})]});};var ConsultStyled=styled.div(_templateObject());","map":{"version":3,"sources":["/Users/choedaehan/Desktop/trip/src/pages/Consult.js"],"names":["React","useState","data","styled","Question","Header","axios","logo","METHODS","Consult","history","result","setResult","count","setCount","list","da","questionList","map","index","handleClick","i","r","concat","length","push","pathname","state","ConsultStyled","div"],"mappings":"4zBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,oCAAjB,CACA,OAASC,OAAT,KAAwB,MAAxB,CAEA,cAAe,SAASC,CAAAA,OAAT,MAA8B,IAAXC,CAAAA,OAAW,MAAXA,OAAW,CAAE;AAAF,cACbT,QAAQ,CAAC,EAAD,CADK,wCAClCU,MADkC,eAC1BC,SAD0B,eACwB;AADxB,eAEfX,QAAQ,CAAC,CAAD,CAFO,yCAElCY,KAFkC,eAE3BC,QAF2B,eAEE;AAC3C,GAAMC,CAAAA,IAAI,CAAGb,IAAI,CAACa,IAAlB,CACA,GAAMC,CAAAA,EAAE,CAAG,EAAX,CAEA,GAAMC,CAAAA,YAAY,CAAGF,IAAI,CAACG,GAAL,CAAS,SAAChB,IAAD,CAAOiB,KAAP,CAAiB,CAC3C,mBACI,KAAC,QAAD,EACgB;AACZ,OAAO,CAAEC,WAAa;AAF1B,CAGI,KAAK,CAAElB,IAAM;AAHjB,CAII,KAAK,CAAEiB,KAAK,CAAG,CAAG;AAJtB,CAKI,KAAK,CAAEN,KAAO;AALlB,EACSM,KADT,CADJ,CASH,CAVoB,CAArB,CAYA,QAASC,CAAAA,WAAT,CAAqBC,CAArB,CAAwBC,CAAxB,CAA2B,CACvBX,MAAM,CAACU,CAAC,CAAG,CAAL,CAAN,CAAgBC,CAAhB,CACAV,SAAS,CAACD,MAAM,CAACY,MAAP,EAAD,CAAT,CACAT,QAAQ,CAACD,KAAK,CAAG,CAAT,CAAR,CAEA,GAAIE,IAAI,CAACS,MAAL,GAAgBH,CAApB,CAAuB,CAEnBX,OAAO,CAACe,IAAR,CAAa,CACTC,QAAQ,CAAE,IADD,CAETC,KAAK,CAAE,CAAEZ,IAAI,CAAEJ,MAAR,CAFE,CAAb,EAKA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACH,CACJ,CAED,mBACI,MAAC,aAAD,yBACI,KAAC,MAAD,EAAQ,KAAK,CAAEE,KAAf,CAAsB,KAAK,CAAEE,IAAI,CAACS,MAAlC,EADJ,cAEI,YAAK,SAAS,CAAC,oBAAf,UACKP,YADL,EAFJ,cAKI,YAAK,SAAS,CAAC,MAAf,uBACI,YAAK,GAAG,CAAEV,IAAV,EADJ,EALJ,GADJ,CAWH,EAED,GAAMqB,CAAAA,aAAa,CAAGzB,MAAM,CAAC0B,GAAV,mBAAnB","sourcesContent":["import React, { useState } from 'react';\r\nimport data from '../data/data.json';\r\n// import answer from '../data/answer.json';\r\nimport styled from 'styled-components';\r\nimport Question from '../component/Question2';\r\nimport Header from '../layouts/Header';\r\nimport axios from 'axios';\r\n\r\nimport logo from '../assets/images/tripsoda_icon.png'\r\nimport { METHODS } from 'http';\r\n\r\nexport default function Consult({ history }) { // 함수형 컴포넌트의 프로퍼티로 pros를 객체를 넘겨준다. 그중 하나의 프로퍼티 이름이 history이다.\r\n    const [result, setResult] = useState([])                         // result에게 데이터를 넘겨주려고 사용.\r\n    const [count, setCount] = useState(1);     // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\r\n    const list = data.list;\r\n    const da = \"\";\r\n    \r\n    const questionList = list.map((data, index) => {\r\n        return (\r\n            <Question \r\n                key={index} // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\r\n                onClick={handleClick} // 클릭 이벤트\r\n                title={data} // 문제 string\r\n                index={index + 1} // 문항번호\r\n                count={count} // 현재 문항번호(현재 위치)\r\n            />            \r\n        );\r\n    });\r\n\r\n    function handleClick(i, r) {\r\n        result[i - 1] = r;\r\n        setResult(result.concat());\r\n        setCount(count + 1);\r\n\r\n        if (list.length === i) {\r\n\r\n            history.push({\r\n                pathname: '/a',\r\n                state: { list: result }\r\n            });\r\n\r\n            // axios.get('/cc').then(res =>{\r\n            //     console.log(res.data)\r\n            // });\r\n\r\n            // $.ajax({\r\n            //     url : '/cc',\r\n            //     type : 'GET'\r\n\r\n            // });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ConsultStyled>\r\n            <Header count={count} total={list.length} />\r\n            <div className=\"question-container\">\r\n                {questionList}\r\n            </div>\r\n            <div className=\"logo\">\r\n                <img src={logo}/>\r\n            </div>\r\n        </ConsultStyled>\r\n    )\r\n};\r\n\r\nconst ConsultStyled = styled.div`\r\n    max-width: 752px;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 0 10px;\r\n    \r\n    .question-container {\r\n        margin-top: 100px;\r\n    }\r\n\r\n    .logo {\r\n        display: flex;\r\n        justify-content: center;\r\n        padding-top: 30px;\r\n    }\r\n`;"]},"metadata":{},"sourceType":"module"}