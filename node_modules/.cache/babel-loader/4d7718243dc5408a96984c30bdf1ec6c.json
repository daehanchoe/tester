{"ast":null,"code":"var _jsxFileName = \"/Users/choedaehan/Desktop/trip/src/component/result/CopyLinkBtn.js\";\nimport React, { useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport icon from \"../../assets/images/url_icon.svg\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nexport default function CopyLinkBtn({\n  characater,\n  tag\n}) {\n  let url = \"https://travelmbti.com/copy_result?char=\" + characater + \"&tag=\" + tag; // url 복사\n\n  const [isCopied, setIsCopied] = useState(false);\n\n  const handleClick = () => {\n    setIsCopied(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setIsCopied(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: url,\n    onCopy: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: icon,\n    alt: \"alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Snackbar, {\n    open: isCopied,\n    autoHideDuration: 3000,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleClose,\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Copied!\")));\n}\n\nfunction Alert(props) {\n  return /*#__PURE__*/React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/choedaehan/Desktop/trip/src/component/result/CopyLinkBtn.js"],"names":["React","useState","CopyToClipboard","Snackbar","MuiAlert","CopyLinkBtn","characater","tag","url","isCopied","setIsCopied","handleClick","handleClose","event","reason","icon","Alert","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,yBAAhC;;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAArB,EAA0C;AACvD,MAAIC,GAAG,GACL,6CAA6CF,UAA7C,GAA0D,OAA1D,GAAoEC,GADtE,CADuD,CAEoB;;AAC3E,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMU,WAAW,GAAG,MAAM;AACxBD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAME,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AAEDJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAND;;AAQA,sBACE,uDACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEF,GAAvB;AAA4B,IAAA,MAAM,EAAEG,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEI,IAAV;AAAgB,IAAA,GAAG,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEN,QAAhB;AAA0B,IAAA,gBAAgB,EAAE,IAA5C;AAAkD,IAAA,OAAO,EAAEG,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,WAAhB;AAA6B,IAAA,QAAQ,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CANF,CADF;AAcD;;AACD,SAASI,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD","sourcesContent":["import React, { useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport icon from \"../../assets/images/url_icon.svg\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nexport default function CopyLinkBtn({ characater, tag }) {\n  let url =\n    \"https://travelmbti.com/copy_result?char=\" + characater + \"&tag=\" + tag; // url 복사\n  const [isCopied, setIsCopied] = useState(false);\n  const handleClick = () => {\n    setIsCopied(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setIsCopied(false);\n  };\n\n  return (\n    <>\n      <CopyToClipboard text={url} onCopy={handleClick}>\n        <button>\n          <img src={icon} alt=\"alt\" />\n        </button>\n      </CopyToClipboard>\n      <Snackbar open={isCopied} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          Copied!\n        </Alert>\n      </Snackbar>\n    </>\n  );\n}\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n"]},"metadata":{},"sourceType":"module"}