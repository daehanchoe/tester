{"ast":null,"code":"import consultList from \"./data/consultList\";\nconst list = consultList; // 15\n\nconst questionsTags = list.filter(data => data.type === \"question\" || \"tag\"); // length: 14\n\nconst questions = list.filter(data => data.type === \"question\"); // length: 7\n\nconst situations = list.filter(data => data.type === \"situation\"); // length:1\n\nconst tags = list.filter(data => data.type === \"tag\"); // 22\n\nconst titles = list.map(data => data.content.question);\nconst types = list.map(data => data.type);\nexport { list, questions, situations, tags, questionsTags, titles, types };","map":{"version":3,"sources":["/Users/choedaehan/Desktop/trip/src/setDate.js"],"names":["consultList","list","questionsTags","filter","data","type","questions","situations","tags","titles","map","content","question","types"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AAEA,MAAMC,IAAI,GAAGD,WAAb,C,CAEA;;AACA,MAAME,aAAa,GAAGD,IAAI,CAACE,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,UAAd,IAA4B,KAAlD,CAAtB,C,CAEA;;AACA,MAAMC,SAAS,GAAGL,IAAI,CAACE,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,UAApC,CAAlB,C,CAEA;;AACA,MAAME,UAAU,GAAGN,IAAI,CAACE,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,WAApC,CAAnB,C,CAEA;;AACA,MAAMG,IAAI,GAAGP,IAAI,CAACE,MAAL,CAAaC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,KAApC,CAAb,C,CAEA;;AACA,MAAMI,MAAM,GAAGR,IAAI,CAACS,GAAL,CAAUN,IAAD,IAAUA,IAAI,CAACO,OAAL,CAAaC,QAAhC,CAAf;AAEA,MAAMC,KAAK,GAAGZ,IAAI,CAACS,GAAL,CAAUN,IAAD,IAAUA,IAAI,CAACC,IAAxB,CAAd;AAEA,SAASJ,IAAT,EAAeK,SAAf,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA4CN,aAA5C,EAA2DO,MAA3D,EAAmEI,KAAnE","sourcesContent":["import consultList from \"./data/consultList\";\n\nconst list = consultList;\n\n// 15\nconst questionsTags = list.filter((data) => data.type === \"question\" || \"tag\");\n\n// length: 14\nconst questions = list.filter((data) => data.type === \"question\");\n\n// length: 7\nconst situations = list.filter((data) => data.type === \"situation\");\n\n// length:1\nconst tags = list.filter((data) => data.type === \"tag\");\n\n// 22\nconst titles = list.map((data) => data.content.question);\n\nconst types = list.map((data) => data.type);\n\nexport { list, questions, situations, tags, questionsTags, titles, types };\n"]},"metadata":{},"sourceType":"module"}