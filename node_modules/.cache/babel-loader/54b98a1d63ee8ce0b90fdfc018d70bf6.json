{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/choedaehan/Desktop/trip/src/pages/insta.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Heart_fill from '../assets/images/heart2.png';\nimport Heart from '../assets/images/heart1.png';\nimport Willy from '../assets/images/willy.png';\nimport data from '../data/data.json';\nimport Question from '../component/Question3';\nimport axios from 'axios';\nimport KakaoApi from '../component/kakaosharebutton';\nimport Tweet from '../component/TweetShareBtn';\nimport Tweet2 from '../component/ssss';\nexport default function Result({\n  history\n}) {\n  _s();\n\n  const [result, setResult] = useState([]); // result에게 데이터를 넘겨주려고 사용.\n\n  const [count, setCount] = useState(1); // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\n\n  const list = data.list;\n  let [like_check, setLike] = useState(false);\n  const questionList = list.map((data, index) => {\n    return /*#__PURE__*/_jsxDEV(Question, {\n      // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\n      onClick: handleClick // 클릭 이벤트\n      ,\n      title: data // 문제 string\n      ,\n      index: index + 1 // 문항번호\n      ,\n      count: count // 현재 문항번호(현재 위치)\n\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  });\n\n  function handleClick(i, r) {\n    result[i - 1] = r;\n    setResult(result.concat());\n    setCount(count + 1);\n\n    if (list.length === i) {\n      history.push({\n        pathname: '/a',\n        state: {\n          list: result\n        }\n      });\n    }\n  }\n\n  function handleClick() {\n    if (like_check === true) {\n      console.log(\"ssss\");\n      setLike(false);\n    } else {\n      console.log(\"aaaaa\");\n      setLike(true);\n    }\n  }\n\n  function search_data() {\n    // const response = await axios.get(\n    let tag = \"tag\";\n    let character = \"Willy\";\n    let open = 3;\n    let extrovert = 2;\n    let resultArray = new Array();\n    resultArray[0] = 1;\n    resultArray[1] = 1;\n    resultArray[2] = 1;\n    resultArray[3] = 1;\n    resultArray[4] = 1;\n    resultArray[5] = 1;\n    resultArray[6] = 1;\n    resultArray[7] = 1;\n    resultArray[8] = 1;\n    resultArray[9] = 1;\n    resultArray[10] = 1;\n    resultArray[11] = 1;\n    resultArray[12] = 1;\n    resultArray[13] = 1; // let url = \"http://118.67.132.128:8000/save_result\";\n    // let url = \"locahost:4000/save_result\";\n\n    let url = '/save_result';\n    var data = {\n      \"tag\": tag,\n      \"character\": character,\n      \"open\": open,\n      \"extrovert\": extrovert,\n      \"resultArray\": resultArray\n    };\n    var config = {\n      method: 'post',\n      url: 'http://118.67.132.128:4000/save_result',\n      headers: {\n        withCredentials: true,\n        xsrfCookieName: \"XSRF-TOKEN\",\n        xsrfHeaderName: \"X-XSRF-TOKEN\"\n      },\n      params: {\n        resultArray,\n        tag,\n        character,\n        extrovert,\n        open\n      }\n    };\n    axios(config) // axios.post(url, {params : {resultArray,tag,character,open,extrovert}})\n    // axios.post(url, {resultArray : 'resultArray',tag : '',character,open,extrovert})\n    .then(res => {\n      console.log(\"sdsa\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Instagramback, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"circle\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile\",\n          src: Willy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: search_data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tweet2, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bottom, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heart\",\n        children: [like_check && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Heart_fill,\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 36\n        }, this), !like_check && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Heart,\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(KakaoApi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Result, \"5tpwJuulp2XHfUQQ0rpwuWakwsI=\");\n\n_c = Result;\n;\nconst Instagramback = styled.div`\n    background-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\n    height: 100vh;\n\n    .li {\n        font-family: Billabong;\n    }\n`;\n_c2 = Instagramback;\nconst Header = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,230%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .circle {\n        width : 42px;\n        height : 42px;\n        border : 1px solid #111; // solid는 선의 모양을 표현\n        border-radius : 100%; // 윤곽선 표현 100%애 가까울 수록 둥글어진다. px로도 사용가능\n        display : block;\n        position : absolute;\n        top : 15px;\n        left : 20px;\n    }\n\n    .profile {\n        width : 100$;\n        height : 100%;\n        position : absolute;\n        top : 0%;\n        left : 15%;\n        // transform : translate(50%,50%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n    }\n`;\n_c3 = Header;\nconst Body = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 300px;\n    top : 20%;\n    left : 50%;\n    transform : translate(-0%,55%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n`;\n_c4 = Body;\nconst Bottom = styled.div`\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,229%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .heart {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n    }\n\n\n    .heart2 {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n        top : 20%;\n        left : 50%;\n        transform : translate(0%,0%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n        \n    }\n`;\n_c5 = Bottom;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Result\");\n$RefreshReg$(_c2, \"Instagramback\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Body\");\n$RefreshReg$(_c5, \"Bottom\");","map":{"version":3,"sources":["/Users/choedaehan/Desktop/trip/src/pages/insta.js"],"names":["React","useState","styled","Heart_fill","Heart","Willy","data","Question","axios","KakaoApi","Tweet","Tweet2","Result","history","result","setResult","count","setCount","list","like_check","setLike","questionList","map","index","handleClick","i","r","concat","length","push","pathname","state","console","log","search_data","tag","character","open","extrovert","resultArray","Array","url","config","method","headers","withCredentials","xsrfCookieName","xsrfHeaderName","params","then","res","Instagramback","div","Header","Body","Bottom"],"mappings":"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AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA2BH;;GA7HuBZ,M;;KAAAA,M;AA6HvB;AAED,MAAMuC,aAAa,GAAGjD,MAAM,CAACkD,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,a;AASN,MAAME,MAAM,GAAGnD,MAAM,CAACkD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;MAAMC,M;AA+BN,MAAMC,IAAI,GAAGpD,MAAM,CAACkD,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAME,I;AAYN,MAAMC,MAAM,GAAGrD,MAAM,CAACkD,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzBA;MAAMG,M","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Heart_fill from '../assets/images/heart2.png';\nimport Heart from '../assets/images/heart1.png';\nimport Willy from '../assets/images/willy.png';\nimport data from '../data/data.json';\nimport Question from '../component/Question3';\nimport axios from 'axios';\nimport KakaoApi from '../component/kakaosharebutton';\nimport Tweet from '../component/TweetShareBtn';\nimport Tweet2 from '../component/ssss';\n\nexport default function Result({ history }) {\n    \n    const [result, setResult] = useState([])                         // result에게 데이터를 넘겨주려고 사용.\n    const [count, setCount] = useState(1);     // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\n    const list = data.list;\n    let [like_check, setLike] = useState(false);\n\n    const questionList = list.map((data, index) => {\n        return (\n            <Question \n                key={index} // react에서 유니크키로 컴포넌트를 찾는다. 그때 사용하는 값.\n                onClick={handleClick} // 클릭 이벤트\n                title={data} // 문제 string\n                index={index + 1} // 문항번호\n                count={count} // 현재 문항번호(현재 위치)\n            />            \n        );\n    });\n\n    function handleClick(i, r) {\n        result[i - 1] = r;\n        setResult(result.concat());\n        setCount(count + 1);\n\n        if (list.length === i) {\n\n            history.push({\n                pathname: '/a',\n                state: { list: result }\n            });\n        }\n    }\n    \n    function handleClick() {\n        if(like_check === true){\n            console.log(\"ssss\");\n            setLike(false);\n        }\n        else{\n            console.log(\"aaaaa\");\n            setLike(true);\n        }\n            \n    }\n\n    function search_data(){\n        // const response = await axios.get(\n            let tag = \"tag\";\n            let character = \"Willy\";\n            let open =3;\n            let extrovert = 2;\n            let resultArray = new Array();\n\n            resultArray[0] = 1;\n            resultArray[1] = 1;\n            resultArray[2] = 1;\n            resultArray[3] = 1;\n            resultArray[4] = 1;\n            resultArray[5] = 1;\n            resultArray[6] = 1;\n            resultArray[7] = 1;\n            resultArray[8] = 1;\n            resultArray[9] = 1;\n            resultArray[10] = 1;\n            resultArray[11] = 1;\n            resultArray[12] = 1;\n            resultArray[13] = 1;\n\n            // let url = \"http://118.67.132.128:8000/save_result\";\n            // let url = \"locahost:4000/save_result\";\n        \n        let url = '/save_result';\n        var data = {\n            \"tag\":tag,\n            \"character\":character,\n            \"open\":open,\n            \"extrovert\":extrovert,\n            \"resultArray\":resultArray\n        };\n\n        var config = {\n            method: 'post',\n            url: 'http://118.67.132.128:4000/save_result',\n            headers: { \n                withCredentials: true,\n                xsrfCookieName: \"XSRF-TOKEN\",\n                xsrfHeaderName: \"X-XSRF-TOKEN\", },\n            params : {resultArray, tag, character, extrovert, open}\n          };\n\n        axios(config)\n        // axios.post(url, {params : {resultArray,tag,character,open,extrovert}})\n        // axios.post(url, {resultArray : 'resultArray',tag : '',character,open,extrovert})\n        .then(res =>{\n                console.log(\"sdsa\");\n        });\n    }\n\n    return (\n    \n        <Instagramback>\n            <Header>\n                <span className=\"circle\">\n                    <img className=\"profile\" src={Willy}/>\n                </span>\n            </Header>\n            <Body>\n                <button onClick={search_data}></button>\n                {/* <Tweet></Tweet> */}\n                <Tweet2></Tweet2>\n            </Body>\n            <Bottom>\n                <div className=\"heart\">\n                    {like_check && <img src={Heart_fill} onClick={handleClick}/>}\n                    {!like_check && <img src={Heart} onClick={handleClick}/>}\n                    <KakaoApi/>\n                    {/* {!like_check && <img src={Heart}/>} */}\n                    {/* <img className=\"heart\" src={Heart_fill} onClick={handleClick}/> */}\n                    {/* <img className=\"heart2\" src={Heart}/> */}\n                </div>\n            </Bottom>\n        </Instagramback>\n       \n    )\n\n};\n\nconst Instagramback = styled.div`\n    background-image: linear-gradient(50deg, rgba(254,218,135,.7), rgba(237,163,203,.7));\n    height: 100vh;\n\n    .li {\n        font-family: Billabong;\n    }\n`;\n\nconst Header = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,230%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .circle {\n        width : 42px;\n        height : 42px;\n        border : 1px solid #111; // solid는 선의 모양을 표현\n        border-radius : 100%; // 윤곽선 표현 100%애 가까울 수록 둥글어진다. px로도 사용가능\n        display : block;\n        position : absolute;\n        top : 15px;\n        left : 20px;\n    }\n\n    .profile {\n        width : 100$;\n        height : 100%;\n        position : absolute;\n        top : 0%;\n        left : 15%;\n        // transform : translate(50%,50%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n    }\n`;\n\nconst Body = styled.div`\n    border-top: solid 1px;\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 300px;\n    top : 20%;\n    left : 50%;\n    transform : translate(-0%,55%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n`;\n\n\nconst Bottom = styled.div`\n    background : white;\n    max-width: 500px;\n    margin: 0 auto;\n    height : 72px;\n    top : 20%;\n    left : 50%;\n    transform : translate(0%,229%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n\n    .heart {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n    }\n\n\n    .heart2 {\n        max-width : 24px;\n        height : 24px;\n        position : absolute;\n        top : 20%;\n        left : 50%;\n        transform : translate(0%,0%); // 자기 자신의 크기의 %만큼 왼쪽과 위쪽으로 이동.\n        \n    }\n`;"]},"metadata":{},"sourceType":"module"}