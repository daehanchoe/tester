{"ast":null,"code":"import _slicedToArray from\"/Users/choedaehan/Desktop/trip2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useContext,useState}from\"react\";var ResultContext=createContext([]);var SetResultContext=createContext(function(){});var TotalCountContext=createContext(1);var SetTotalCountContext=createContext(function(){});var QuestionCountContext=createContext(1);var SetQuestionCountContext=createContext(function(){});export default function QuestionProvider(_ref){var children=_ref.children;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),result=_useState2[0],setResult=_useState2[1];// result에게 데이터를 넘겨주려고 사용.\n//   totalCount(22), 다음으로 버튼을 누르면 올라가게\nvar _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),totalCount=_useState4[0],setTotalCount=_useState4[1];// 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\n//   questionAndTag(15), handleClick 변수 i 값\nvar _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),questionCount=_useState6[0],setQuestionCount=_useState6[1];// 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\nreturn/*#__PURE__*/React.createElement(SetTotalCountContext.Provider,{value:setTotalCount},/*#__PURE__*/React.createElement(SetQuestionCountContext.Provider,{value:setQuestionCount},/*#__PURE__*/React.createElement(SetResultContext.Provider,{value:setResult},/*#__PURE__*/React.createElement(ResultContext.Provider,{value:result},/*#__PURE__*/React.createElement(TotalCountContext.Provider,{value:totalCount},/*#__PURE__*/React.createElement(QuestionCountContext.Provider,{value:questionCount},children))))));}export function useResultState(){var result=useContext(ResultContext);if(!result){throw new Error(\"Cannot find UsersProvider\");}return result;}export function useSetResult(){var result=useContext(SetResultContext);if(!result){throw new Error(\"Cannot find UsersProvider\");}return result;}export function useTotalCount(){var result=useContext(TotalCountContext);if(!result){throw new Error(\"Cannot find UsersProvider\");}return result;}export function useSetTotalCount(){var result=useContext(SetTotalCountContext);if(!result){throw new Error(\"Cannot find UsersProvider\");}return result;}export function useQuestionCount(){var result=useContext(QuestionCountContext);if(!result){throw new Error(\"Cannot find UsersProvider\");}return result;}export function useSetQuestionCount(){var result=useContext(SetQuestionCountContext);if(!result){throw new Error(\"Cannot find UsersProvider\");}return result;}","map":{"version":3,"sources":["/Users/choedaehan/Desktop/trip2/src/QuestionContext.js"],"names":["React","createContext","useContext","useState","ResultContext","SetResultContext","TotalCountContext","SetTotalCountContext","QuestionCountContext","SetQuestionCountContext","QuestionProvider","children","result","setResult","totalCount","setTotalCount","questionCount","setQuestionCount","useResultState","Error","useSetResult","useTotalCount","useSetTotalCount","useQuestionCount","useSetQuestionCount"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\nconst ResultContext = createContext([]);\nconst SetResultContext = createContext(() => {});\nconst TotalCountContext = createContext(1);\nconst SetTotalCountContext = createContext(() => {});\nconst QuestionCountContext = createContext(1);\nconst SetQuestionCountContext = createContext(() => {});\nexport default function QuestionProvider({ children }) {\n  const [result, setResult] = useState([]); // result에게 데이터를 넘겨주려고 사용.\n  //   totalCount(22), 다음으로 버튼을 누르면 올라가게\n  const [totalCount, setTotalCount] = useState(1); // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\n  //   questionAndTag(15), handleClick 변수 i 값\n  const [questionCount, setQuestionCount] = useState(1); // 함수형 컴포넌트를 사용하는 방식.(hook) : count=useState(1), setCount는 밑에서 추가\n\n  return (\n    <SetTotalCountContext.Provider value={setTotalCount}>\n      <SetQuestionCountContext.Provider value={setQuestionCount}>\n        <SetResultContext.Provider value={setResult}>\n          <ResultContext.Provider value={result}>\n            <TotalCountContext.Provider value={totalCount}>\n              <QuestionCountContext.Provider value={questionCount}>\n                {children}\n              </QuestionCountContext.Provider>\n            </TotalCountContext.Provider>\n          </ResultContext.Provider>\n        </SetResultContext.Provider>\n      </SetQuestionCountContext.Provider>\n    </SetTotalCountContext.Provider>\n  );\n}\n\nexport function useResultState() {\n  const result = useContext(ResultContext);\n  if (!result) {\n    throw new Error(\"Cannot find UsersProvider\");\n  }\n  return result;\n}\n\nexport function useSetResult() {\n  const result = useContext(SetResultContext);\n  if (!result) {\n    throw new Error(\"Cannot find UsersProvider\");\n  }\n  return result;\n}\n\nexport function useTotalCount() {\n  const result = useContext(TotalCountContext);\n  if (!result) {\n    throw new Error(\"Cannot find UsersProvider\");\n  }\n  return result;\n}\n\nexport function useSetTotalCount() {\n  const result = useContext(SetTotalCountContext);\n  if (!result) {\n    throw new Error(\"Cannot find UsersProvider\");\n  }\n  return result;\n}\n\nexport function useQuestionCount() {\n  const result = useContext(QuestionCountContext);\n  if (!result) {\n    throw new Error(\"Cannot find UsersProvider\");\n  }\n  return result;\n}\n\nexport function useSetQuestionCount() {\n  const result = useContext(SetQuestionCountContext);\n  if (!result) {\n    throw new Error(\"Cannot find UsersProvider\");\n  }\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}