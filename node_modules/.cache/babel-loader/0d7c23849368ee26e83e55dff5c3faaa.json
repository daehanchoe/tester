{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/choedaehan/Desktop/trip2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from\"react\";import styled from\"styled-components\";import{getType}from\"../../units\";import{list}from\"../../setDate\";import{useTotalCount}from\"../../QuestionContext\";import QuestionComponent from\"./QuestionComponent\";import SituationComponent from\"./SituationComponent\";export default function Question(){var id=useTotalCount()-1;return/*#__PURE__*/React.createElement(StyledQuestion,null,getType(list[id])===\"situation\"?/*#__PURE__*/React.createElement(SituationComponent,null):/*#__PURE__*/React.createElement(QuestionComponent,null));}var StyledQuestion=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding: 0 0.1rem;\\n  margin-bottom: 4.2rem;\\n  background-color: white;\\n\"])));","map":{"version":3,"sources":["/Users/choedaehan/Desktop/trip2/src/component/consult/Question.js"],"names":["React","styled","getType","list","useTotalCount","QuestionComponent","SituationComponent","Question","id","StyledQuestion","div"],"mappings":"0LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,IAAT,KAAqB,eAArB,CACA,OAASC,aAAT,KAA8B,uBAA9B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,GAAIC,CAAAA,EAAE,CAAGJ,aAAa,GAAK,CAA3B,CACA,mBACE,oBAAC,cAAD,MACGF,OAAO,CAACC,IAAI,CAACK,EAAD,CAAL,CAAP,GAAsB,WAAtB,cACC,oBAAC,kBAAD,MADD,cAGC,oBAAC,iBAAD,MAJJ,CADF,CASD,CAED,GAAMC,CAAAA,cAAc,CAAGR,MAAM,CAACS,GAAV,+IAApB","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { getType } from \"../../units\";\nimport { list } from \"../../setDate\";\nimport { useTotalCount } from \"../../QuestionContext\";\nimport QuestionComponent from \"./QuestionComponent\";\nimport SituationComponent from \"./SituationComponent\";\nexport default function Question() {\n  let id = useTotalCount() - 1;\n  return (\n    <StyledQuestion>\n      {getType(list[id]) === \"situation\" ? (\n        <SituationComponent />\n      ) : (\n        <QuestionComponent />\n      )}\n    </StyledQuestion>\n  );\n}\n\nconst StyledQuestion = styled.div`\n  padding: 0 0.1rem;\n  margin-bottom: 4.2rem;\n  background-color: white;\n`;\n"]},"metadata":{},"sourceType":"module"}